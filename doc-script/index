<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="fr">​​​​​<head><meta charset="utf-8"/><title>Doc-script: pwaipwai.utils.js</title><meta name="description" content="documentation pour pwaiwpai.utils.js, un ensemble de script pour KatePart"/><link rel="stylesheet" href="css/style.css" type="text/css" media="screen"/></head><body role="document" id="top"><header><h1>Commandes pour <span>KatePart</span></h1><dl><dt>Autheur</dt><dd>Jonathan Poelen</dd><dt>E-mail</dt><dd><a href="mailto:jonathan.poelen@gmail.com">jonathan.poelen@gmail.com</a></dd><dd><a href="mailto:jo.link.noir@gmail.com">jo.link.noir@gmail.com</a></dd></dl><nav><ul><li><a href="#function-type-function">function (91)</a></li><li><a href="#function-type-util">util (35)</a></li><li><a href="#function-type-Object extend">Object extend (27)</a></li></ul></nav></header><article role="main" id="function-type-function"><header><h1>Function type : function</h1></header><nav><ul><li id="menu-function-alias"><a href="#function-alias"><span class="function-name">alias</span><span>(<span class="var-name">name</span>
				: <span class="var-type">String</span>, <span class="var-param"><span class="var-param-begin">[</span><span class="var-name">params</span> : <span class="var-type">mixed</span>, <span class="var-name">…</span><span class="var-param-end">]</span></span>, <span class="var-name">commandReference</span>
				: <span class="var-type">String</span>)</span></a></li><li id="menu-function-align"><a href="#function-align"><span class="function-name">align</span><span>(<span class="var-name">split</span>
				: <span class="var-type">RegExp</span>
				= <span class="var-default">[ \t]</span>, <span class="var-name">deliminator</span>
				: <span class="var-type">String</span>
				= <span class="var-default">' '</span>, <span class="var-name">complet</span>
				: <span class="var-type">String</span>
				= <span class="var-default">' '</span>, <span class="var-name">completLast</span>
				: <span class="var-type">Boolean</span>
				= <span class="var-default">false</span>)</span></a></li><li id="menu-function-apply"><a href="#function-apply"><span class="function-name">apply</span><span>(<span class="var-name">step</span>
				: <span class="var-type">Number|String</span>
				= <span class="var-default">0</span>, <span class="var-name">command</span>
				: <span class="var-type">String</span>, <span class="var-param"><span class="var-param-begin">[</span><span class="var-name">params</span> : <span class="var-type">mixed</span>, <span class="var-name">…</span><span class="var-param-end">]</span></span>)</span></a></li><li id="menu-function-between"><a href="#function-between"><span class="function-name">between</span><span>(<span class="var-name">s</span>
				: <span class="var-type">String</span>, <span class="var-name">exclude</span>
				: <span class="var-type">Boolean</span>
				= <span class="var-default">true</span>)</span></a></li><li id="menu-function-call"><a href="#function-call"><span class="function-name">call</span><span>(<span class="var-name">deliminator</span>
				: <span class="var-type">RegExp</span>
				= <span class="var-default">' '</span>, <span class="var-name">command</span>
				: <span class="var-type">String</span>, <span class="var-param"><span class="var-param-begin">[</span><span class="var-name">params</span> : <span class="var-type">mixed</span>, <span class="var-name">…</span><span class="var-param-end">]</span></span>)</span></a></li><li id="menu-function-change"><a href="#function-change"><span class="function-name">change</span><span>(<span class="var-name">str</span>
				: <span class="var-type">String</span>, <span class="var-name">rgx</span>
				: <span class="var-type">RegExp</span>, <span class="var-name">remplace</span>
				: <span class="var-type">String</span>, <span class="var-name">…</span>)</span></a></li><li id="menu-function-changeLine"><a href="#function-changeLine"><span class="function-name">changeLine</span><span>(<span class="var-name">str</span>
				: <span class="var-type">String</span>, <span class="var-name">rgx</span>
				: <span class="var-type">RegExp</span>, <span class="var-name">remplace</span>
				: <span class="var-type">String</span>, <span class="var-name">…</span>)</span></a></li><li id="menu-function-count"><a href="#function-count"><span class="function-name">count</span><span>(<span class="var-name">opt</span>
				: <span class="var-type">String</span>
				= <span class="var-default">'c'</span>, <span class="var-name">text</span>
				: <span class="var-type">undefined|String</span>)</span></a></li><li id="menu-function-countChar"><a href="#function-countChar"><span class="function-name">countChar</span><span>(<span class="var-name">text</span>
				: <span class="var-type">String</span>, <span class="var-name">opt</span>
				: <span class="var-type">String</span>
				= <span class="var-default">text</span>)</span></a></li><li id="menu-function-countLine"><a href="#function-countLine"><span class="function-name">countLine</span><span>(<span class="var-name">text</span>
				: <span class="var-type">String</span>, <span class="var-name">opt</span>
				: <span class="var-type">String</span>
				= <span class="var-default">text</span>)</span></a></li><li id="menu-function-countLongWord"><a href="#function-countLongWord"><span class="function-name">countLongWord</span><span>(<span class="var-name">text</span>
				: <span class="var-type">String</span>, <span class="var-name">opt</span>
				: <span class="var-type">String</span>
				= <span class="var-default">text</span>)</span></a></li><li id="menu-function-countRgx"><a href="#function-countRgx"><span class="function-name">countRgx</span><span>(<span class="var-name">text</span>
				: <span class="var-type">String</span>, <span class="var-name">rgx</span>
				: <span class="var-type">RegExp</span>, <span class="var-name">opt</span>
				: <span class="var-type">undefined|String</span>)</span></a></li><li id="menu-function-countWord"><a href="#function-countWord"><span class="function-name">countWord</span><span>(<span class="var-name">text</span>
				: <span class="var-type">String</span>, <span class="var-name">opt</span>
				: <span class="var-type">String</span>
				= <span class="var-default">text</span>)</span></a></li><li id="menu-function-createFunction"><a href="#function-createFunction"><span class="function-name">createFunction</span><span>(<span class="var-name">name</span>
				: <span class="var-type">String</span>, <span class="var-param"><span class="var-param-begin">[</span><span class="var-name">params</span> : <span class="var-type">mixed</span>, <span class="var-name">…</span><span class="var-param-end">]</span></span>, <span class="var-name">body</span>
				: <span class="var-type">JSCode</span>)</span></a></li><li id="menu-function-cursor"><a href="#function-cursor"><span class="function-name">cursor</span><span>(<span class="var-name">c1</span>
				: <span class="var-type">String|Number</span>, <span class="var-name">c2</span>
				: <span class="var-type">String|Number</span>, <span class="var-name">pos</span>
				: <span class="var-type">Boolean</span>
				= <span class="var-default">false</span>)</span></a></li><li id="menu-function-cut"><a href="#function-cut"><span class="function-name">cut</span><span>(<span class="var-name">rgx</span>
				: <span class="var-type">RegExp</span>, <span class="var-name">cols</span>
				: <span class="var-type">String|Number</span>, <span class="var-name">…</span>)</span></a></li><li id="menu-function-decodeuri"><a href="#function-decodeuri"><span class="function-name">decodeuri</span><span>()</span></a></li><li id="menu-function-detach"><a href="#function-detach"><span class="function-name">detach</span><span>(<span class="var-name">str</span>
				: <span class="var-type">String</span>, <span class="var-name">n</span>
				: <span class="var-type">Stepper</span>, <span class="var-name">…</span>)</span></a></li><li id="menu-function-detachLeft"><a href="#function-detachLeft"><span class="function-name">detachLeft</span><span>(<span class="var-name">str</span>
				: <span class="var-type">String</span>, <span class="var-name">n</span>
				: <span class="var-type">Stepper</span>, <span class="var-name">…</span>)</span></a></li><li id="menu-function-diffSelection"><a href="#function-diffSelection"><span class="function-name">diffSelection</span><span>(<span class="var-name">c1</span>
				: <span class="var-type">cursor</span>, <span class="var-name">c2</span>
				: <span class="var-type">cursor</span>, <span class="var-name">c3</span>
				: <span class="var-type">cursor</span>, <span class="var-name">c4</span>
				: <span class="var-type">cursor</span>)</span></a></li><li id="menu-function-duplicate"><a href="#function-duplicate"><span class="function-name">duplicate</span><span>(<span class="var-name">n</span>
				: <span class="var-type">Number|Stepper</span>
				= <span class="var-default">1</span>, <span class="var-name">down</span>
				: <span class="var-type">Boolean</span>
				= <span class="var-default">false</span>)</span></a></li><li id="menu-function-echap"><a href="#function-echap"><span class="function-name">echap</span><span>(<span class="var-name">str</span>
				: <span class="var-type">undefined|String</span>
				= <span class="var-default">text[text.search(/[^\s]/)]</span>, <span class="var-name">strEscape</span>
				: <span class="var-type">String</span>
				= <span class="var-default">'\'</span>, <span class="var-name">force</span>
				: <span class="var-type">Boolean</span>
				= <span class="var-default">false</span>)</span></a></li><li id="menu-function-encodeuri"><a href="#function-encodeuri"><span class="function-name">encodeuri</span><span>()</span></a></li><li id="menu-function-encoding"><a href="#function-encoding"><span class="function-name">encoding</span><span>()</span></a></li><li id="menu-function-eval"><a href="#function-eval"><span class="function-name">eval</span><span>(<span class="var-name">…</span>
				: <span class="var-type">JSCode</span>)</span></a></li><li id="menu-function-execFunction"><a href="#function-execFunction"><span class="function-name">execFunction</span><span>(<span class="var-name">name</span>
				: <span class="var-type">String</span>, <span class="var-param"><span class="var-param-begin">[</span><span class="var-name">params</span> : <span class="var-type">mixed</span>, <span class="var-name">…</span><span class="var-param-end">]</span></span>)</span></a></li><li id="menu-function-explode"><a href="#function-explode"><span class="function-name">explode</span><span>(<span class="var-name">rgx</span>
				: <span class="var-type">RegExp</span>, <span class="var-name">cols</span>
				: <span class="var-type">String|Number</span>, <span class="var-name">…</span>)</span></a></li><li id="menu-function-extension"><a href="#function-extension"><span class="function-name">extension</span><span>()</span></a></li><li id="menu-function-filename"><a href="#function-filename"><span class="function-name">filename</span><span>(<span class="var-name">noExt</span>
				: <span class="var-type">Boolean</span>
				= <span class="var-default">false</span>)</span></a></li><li id="menu-function-highlightingMode"><a href="#function-highlightingMode"><span class="function-name">highlightingMode</span><span>()</span></a></li><li id="menu-function-highlightingModeCursor"><a href="#function-highlightingModeCursor"><span class="function-name">highlightingModeCursor</span><span>()</span></a></li><li id="menu-function-insert"><a href="#function-insert"><span class="function-name">insert</span><span>(<span class="var-name">str</span>
				: <span class="var-type">String</span>, <span class="var-name">n</span>
				: <span class="var-type">Stepper</span>, <span class="var-name">…</span>)</span></a></li><li id="menu-function-insertEval"><a href="#function-insertEval"><span class="function-name">insertEval</span><span>(<span class="var-name">…</span>
				: <span class="var-type">JSCode</span>)</span></a></li><li id="menu-function-insertLeft"><a href="#function-insertLeft"><span class="function-name">insertLeft</span><span>(<span class="var-name">str</span>
				: <span class="var-type">String</span>, <span class="var-name">n</span>
				: <span class="var-type">Stepper</span>, <span class="var-name">…</span>)</span></a></li><li id="menu-function-interval"><a href="#function-interval"><span class="function-name">interval</span><span>(<span class="var-name">start</span>
				: <span class="var-type">Number|String</span>, <span class="var-name">end</span>
				: <span class="var-type">Number</span>, <span class="var-name">command</span>
				: <span class="var-type">String</span>, <span class="var-param"><span class="var-param-begin">[</span><span class="var-name">params</span> : <span class="var-type">mixed</span>, <span class="var-name">…</span><span class="var-param-end">]</span></span>)</span></a></li><li id="menu-function-join2"><a href="#function-join2"><span class="function-name">join2</span><span>(<span class="var-name">deliminator</span>
				: <span class="var-type">String</span>
				= <span class="var-default">''</span>, <span class="var-name">…</span>)</span></a></li><li id="menu-function-kill"><a href="#function-kill"><span class="function-name">kill</span><span>(<span class="var-name">c1</span>
				: <span class="var-type">cursor</span>, <span class="var-name">c2</span>
				: <span class="var-type">cursor</span>)</span></a></li><li id="menu-function-length"><a href="#function-length"><span class="function-name">length</span><span>(<span class="var-name">…</span>
				: <span class="var-type">String</span>)</span></a></li><li id="menu-function-mimeType"><a href="#function-mimeType"><span class="function-name">mimeType</span><span>()</span></a></li><li id="menu-function-mv"><a href="#function-mv"><span class="function-name">mv</span><span>(<span class="var-name">newPos</span>
				: <span class="var-type">cursor</span>)</span></a></li><li id="menu-function-mvLine"><a href="#function-mvLine"><span class="function-name">mvLine</span><span>(<span class="var-name">newPos</span>
				: <span class="var-type">cursor</span>)</span></a></li><li id="menu-function-natsort2"><a href="#function-natsort2"><span class="function-name">natsort2</span><span>(<span class="var-name">step</span>
				: <span class="var-type">stepper|Boolean</span>, <span class="var-name">caseSensitive</span>
				: <span class="var-type">Boolean</span>
				= <span class="var-default">false</span>)</span></a></li><li id="menu-function-nreplace"><a href="#function-nreplace"><span class="function-name">nreplace</span><span>(<span class="var-name">n</span>
				: <span class="var-type">Number</span>, <span class="var-name">str</span>
				: <span class="var-type">String</span>, <span class="var-name">line</span>
				: <span class="var-type">Stepper</span>, <span class="var-name">…</span>)</span></a></li><li id="menu-function-nreplaceLeft"><a href="#function-nreplaceLeft"><span class="function-name">nreplaceLeft</span><span>(<span class="var-name">n</span>
				: <span class="var-type">Number</span>, <span class="var-name">str</span>
				: <span class="var-type">String</span>, <span class="var-name">line</span>
				: <span class="var-type">Stepper</span>, <span class="var-name">…</span>)</span></a></li><li id="menu-function-outer"><a href="#function-outer"><span class="function-name">outer</span><span>(<span class="var-name">text</span>
				: <span class="var-type">String</span>, <span class="var-name">…</span>)</span></a></li><li id="menu-function-outerLine"><a href="#function-outerLine"><span class="function-name">outerLine</span><span>(<span class="var-name">text</span>
				: <span class="var-type">String</span>, <span class="var-name">…</span>)</span></a></li><li id="menu-function-printEval"><a href="#function-printEval"><span class="function-name">printEval</span><span>(<span class="var-name">…</span>
				: <span class="var-type">JSCode</span>)</span></a></li><li id="menu-function-random"><a href="#function-random"><span class="function-name">random</span><span>(<span class="var-name">min</span>
				: <span class="var-type">Number</span>
				= <span class="var-default">0</span>, <span class="var-name">max</span>
				: <span class="var-type">Number</span>
				= <span class="var-default">99</span>)</span></a></li><li id="menu-function-range"><a href="#function-range"><span class="function-name">range</span><span>(<span class="var-name">begin</span>
				: <span class="var-type">Number</span>
				= <span class="var-default">0</span>, <span class="var-name">end</span>
				: <span class="var-type">Number</span>
				= <span class="var-default">begin</span>, <span class="var-name">deliminator</span>
				: <span class="var-type">String</span>
				= <span class="var-default">' '</span>, <span class="var-name">step</span>
				: <span class="var-type">Number</span>
				= <span class="var-default">1</span>, <span class="var-name">selected</span>
				: <span class="var-type">Boolean</span>
				= <span class="var-default">false</span>)</span></a></li><li id="menu-function-repeat"><a href="#function-repeat"><span class="function-name">repeat</span><span>(<span class="var-name">str</span>
				: <span class="var-type">String</span>, <span class="var-name">rgx</span>
				: <span class="var-type">RegExp</span>, <span class="var-name">remplace</span>
				: <span class="var-type">String</span>, <span class="var-name">…</span>)</span></a></li><li id="menu-function-repeatLine"><a href="#function-repeatLine"><span class="function-name">repeatLine</span><span>(<span class="var-name">rgx</span>
				: <span class="var-type">RegExp</span>, <span class="var-name">remplace</span>
				: <span class="var-type">String</span>, <span class="var-name">…</span>)</span></a></li><li id="menu-function-replace"><a href="#function-replace"><span class="function-name">replace</span><span>(<span class="var-name">str</span>
				: <span class="var-type">String</span>, <span class="var-name">rgx</span>
				: <span class="var-type">RegExp</span>, <span class="var-name">remplace</span>
				: <span class="var-type">String</span>, <span class="var-name">…</span>)</span></a></li><li id="menu-function-replaceLine"><a href="#function-replaceLine"><span class="function-name">replaceLine</span><span>(<span class="var-name">rgx</span>
				: <span class="var-type">RegExp</span>, <span class="var-name">remplace</span>
				: <span class="var-type">String</span>, <span class="var-name">…</span>)</span></a></li><li id="menu-function-reverse"><a href="#function-reverse"><span class="function-name">reverse</span><span>(<span class="var-name">group</span>
				: <span class="var-type">Number</span>
				= <span class="var-default">1</span>, <span class="var-name">step</span>
				: <span class="var-type">Number</span>
				= <span class="var-default">0</span>, <span class="var-name">prepend</span>
				: <span class="var-type">Boolean</span>
				= <span class="var-default">false</span>)</span></a></li><li id="menu-function-reverseLine"><a href="#function-reverseLine"><span class="function-name">reverseLine</span><span>(<span class="var-name">group</span>
				: <span class="var-type">Number</span>
				= <span class="var-default">1</span>, <span class="var-name">step</span>
				: <span class="var-type">Number</span>
				= <span class="var-default">0</span>, <span class="var-name">prepend</span>
				: <span class="var-type">Boolean</span>
				= <span class="var-default">false</span>)</span></a></li><li id="menu-function-reverseWord"><a href="#function-reverseWord"><span class="function-name">reverseWord</span><span>(<span class="var-name">group</span>
				: <span class="var-type">Number</span>
				= <span class="var-default">1</span>, <span class="var-name">step</span>
				: <span class="var-type">Number</span>
				= <span class="var-default">0</span>, <span class="var-name">prepend</span>
				: <span class="var-type">Boolean</span>
				= <span class="var-default">false</span>, <span class="var-name">boundaryBegin</span>
				: <span class="var-type">Boolean</span>
				= <span class="var-default">false</span>, <span class="var-name">boundaryEnd</span>
				: <span class="var-type">Boolean</span>
				= <span class="var-default">false</span>)</span></a></li><li id="menu-function-rewindSelection"><a href="#function-rewindSelection"><span class="function-name">rewindSelection</span><span>()</span></a></li><li id="menu-function-rgxinterval"><a href="#function-rgxinterval"><span class="function-name">rgxinterval</span><span>(<span class="var-name">str</span>
				: <span class="var-type">String</span>, <span class="var-name">rgx</span>
				: <span class="var-type">RegExp</span>, <span class="var-name">start</span>
				: <span class="var-type">Number|String</span>, <span class="var-name">end</span>
				: <span class="var-type">Number</span>, <span class="var-name">command</span>
				: <span class="var-type">String</span>, <span class="var-param"><span class="var-param-begin">[</span><span class="var-name">params</span> : <span class="var-type">mixed</span>, <span class="var-name">…</span><span class="var-param-end">]</span></span>)</span></a></li><li id="menu-function-rmLinesWithOnly"><a href="#function-rmLinesWithOnly"><span class="function-name">rmLinesWithOnly</span><span>(<span class="var-name">toFind</span>
				: <span class="var-type">String</span>
				= <span class="var-default">''</span>, <span class="var-name">…</span>)</span></a></li><li id="menu-function-rmNCharacter"><a href="#function-rmNCharacter"><span class="function-name">rmNCharacter</span><span>(<span class="var-name">n</span>
				: <span class="var-type">Number</span>, <span class="var-name">stepper</span>
				: <span class="var-type">Stepper</span>
				= <span class="var-default">'1'</span>, <span class="var-name">n2</span>
				: <span class="var-type">Number</span>, <span class="var-name">stepper2</span>
				: <span class="var-type">Stepper</span>
				= <span class="var-default">argument[argument.length-2] || '1'</span>, <span class="var-name">…</span>)</span></a></li><li id="menu-function-rmNCharacterLeft"><a href="#function-rmNCharacterLeft"><span class="function-name">rmNCharacterLeft</span><span>(<span class="var-name">n</span>
				: <span class="var-type">Number</span>, <span class="var-name">stepper</span>
				: <span class="var-type">Stepper</span>
				= <span class="var-default">'1'</span>, <span class="var-name">n2</span>
				: <span class="var-type">Number</span>, <span class="var-name">stepper2</span>
				: <span class="var-type">Stepper</span>
				= <span class="var-default">argument[argument.length-2] || '1'</span>, <span class="var-name">…</span>)</span></a></li><li id="menu-function-rmText"><a href="#function-rmText"><span class="function-name">rmText</span><span>(<span class="var-name">text</span>
				: <span class="var-type">String</span>
				= <span class="var-default">' '</span>, <span class="var-name">…</span>)</span></a></li><li id="menu-function-rmTextOf"><a href="#function-rmTextOf"><span class="function-name">rmTextOf</span><span>(<span class="var-name">text</span>
				: <span class="var-type">String</span>
				= <span class="var-default">' \t\v'</span>, <span class="var-name">…</span>)</span></a></li><li id="menu-function-rnatsort"><a href="#function-rnatsort"><span class="function-name">rnatsort</span><span>(<span class="var-name">step</span>
				: <span class="var-type">stepper|Boolean</span>, <span class="var-name">caseSensitive</span>
				: <span class="var-type">Boolean</span>
				= <span class="var-default">false</span>)</span></a></li><li id="menu-function-romanNumeral"><a href="#function-romanNumeral"><span class="function-name">romanNumeral</span><span>(<span class="var-name">n</span>
				: <span class="var-type">Number</span>)</span></a></li><li id="menu-function-rsort"><a href="#function-rsort"><span class="function-name">rsort</span><span>(<span class="var-name">step</span>
				: <span class="var-type">stepper|Boolean</span>, <span class="var-name">caseSensitive</span>
				: <span class="var-type">Boolean</span>
				= <span class="var-default">false</span>)</span></a></li><li id="menu-function-rusort"><a href="#function-rusort"><span class="function-name">rusort</span><span>(<span class="var-name">body</span>
				: <span class="var-type">Strting</span>, <span class="var-name">step</span>
				: <span class="var-type">stepper|Boolean</span>, <span class="var-name">caseSensitive</span>
				: <span class="var-type">Boolean</span>
				= <span class="var-default">false</span>)</span></a></li><li id="menu-function-rwrap"><a href="#function-rwrap"><span class="function-name">rwrap</span><span>(<span class="var-name">text</span>
				: <span class="var-type">String</span>, <span class="var-name">…</span>)</span></a></li><li id="menu-function-rwrapLine"><a href="#function-rwrapLine"><span class="function-name">rwrapLine</span><span>(<span class="var-name">text</span>
				: <span class="var-type">String</span>, <span class="var-name">…</span>)</span></a></li><li id="menu-function-select"><a href="#function-select"><span class="function-name">select</span><span>(<span class="var-name">begin</span>
				: <span class="var-type">String</span>, <span class="var-name">end</span>
				: <span class="var-type">String</span>, <span class="var-name">exclude</span>
				: <span class="var-type">Boolean</span>
				= <span class="var-default">false</span>)</span></a></li><li id="menu-function-selectBlock"><a href="#function-selectBlock"><span class="function-name">selectBlock</span><span>()</span></a></li><li id="menu-function-set-always-write-namespace"><a href="#function-set-always-write-namespace"><span class="function-name">set-always-write-namespace</span><span>(<span class="var-name">always</span>
				: <span class="var-type">Boolean</span>
				= <span class="var-default">false</span>)</span></a></li><li id="menu-function-set-call-interpret-string"><a href="#function-set-call-interpret-string"><span class="function-name">set-call-interpret-string</span><span>(
				: <span class="var-type">Boolean</span>)</span></a></li><li id="menu-function-set-namespace-tag"><a href="#function-set-namespace-tag"><span class="function-name">set-namespace-tag</span><span>(<span class="var-name">namespace</span>
				: <span class="var-type">String</span>
				= <span class="var-default">''</span>)</span></a></li><li id="menu-function-slice"><a href="#function-slice"><span class="function-name">slice</span><span>(<span class="var-name">deliminator</span>
				: <span class="var-type">String</span>
				= <span class="var-default">' '</span>, <span class="var-name">size</span>
				: <span class="var-type">Number</span>
				= <span class="var-default">1</span>, <span class="var-name">…</span>)</span></a></li><li id="menu-function-sort2"><a href="#function-sort2"><span class="function-name">sort2</span><span>(<span class="var-name">step</span>
				: <span class="var-type">stepper|Boolean</span>, <span class="var-name">caseSensitive</span>
				: <span class="var-type">Boolean</span>
				= <span class="var-default">false</span>)</span></a></li><li id="menu-function-swap"><a href="#function-swap"><span class="function-name">swap</span><span>(<span class="var-name">deliminator</span>
				: <span class="var-type">String</span>
				= <span class="var-default">''</span>, <span class="var-name">ignoreBackslash</span>
				: <span class="var-type">0|1|2</span>
				= <span class="var-default">1</span>, <span class="var-name">position</span>
				: <span class="var-type">Number</span>
				= <span class="var-default">1</span>)</span></a></li><li id="menu-function-swapCharacter"><a href="#function-swapCharacter"><span class="function-name">swapCharacter</span><span>()</span></a></li><li id="menu-function-tag"><a href="#function-tag"><span class="function-name">tag</span><span>(<span class="var-name">name</span>
				: <span class="var-type">String</span>, <span class="var-name">indent</span>
				: <span class="var-type">Boolean</span>
				= <span class="var-default">false</span>)</span></a></li><li id="menu-function-tr"><a href="#function-tr"><span class="function-name">tr</span><span>(<span class="var-name">findTo</span>
				: <span class="var-type">String</span>, <span class="var-name">replaceTo</span>
				: <span class="var-type">String</span>
				= <span class="var-default">''</span>, <span class="var-name">empty</span>
				: <span class="var-type">Boolean</span>
				= <span class="var-default">false</span>)</span></a></li><li id="menu-function-uniq2"><a href="#function-uniq2"><span class="function-name">uniq2</span><span>(<span class="var-name">last</span>
				: <span class="var-type">Boolean</span>
				= <span class="var-default">false</span>)</span></a></li><li id="menu-function-unouter"><a href="#function-unouter"><span class="function-name">unouter</span><span>(<span class="var-name">text</span>
				: <span class="var-type">String</span>, <span class="var-name">…</span>)</span></a></li><li id="menu-function-unouterLine"><a href="#function-unouterLine"><span class="function-name">unouterLine</span><span>(<span class="var-name">text</span>
				: <span class="var-type">String</span>, <span class="var-name">…</span>)</span></a></li><li id="menu-function-unrwrap"><a href="#function-unrwrap"><span class="function-name">unrwrap</span><span>(<span class="var-name">text</span>
				: <span class="var-type">String</span>, <span class="var-name">…</span>)</span></a></li><li id="menu-function-unrwrapLine"><a href="#function-unrwrapLine"><span class="function-name">unrwrapLine</span><span>(<span class="var-name">text</span>
				: <span class="var-type">String</span>, <span class="var-name">…</span>)</span></a></li><li id="menu-function-unwrap"><a href="#function-unwrap"><span class="function-name">unwrap</span><span>(<span class="var-name">text</span>
				: <span class="var-type">String</span>, <span class="var-name">…</span>)</span></a></li><li id="menu-function-unwrapLine"><a href="#function-unwrapLine"><span class="function-name">unwrapLine</span><span>(<span class="var-name">text</span>
				: <span class="var-type">String</span>, <span class="var-name">…</span>)</span></a></li><li id="menu-function-url"><a href="#function-url"><span class="function-name">url</span><span>(<span class="var-name">nDir</span>
				: <span class="var-type">Number|Boolean</span>, <span class="var-name">replace</span>
				: <span class="var-type">String</span>
				= <span class="var-default">undefined</span>, <span class="var-name">noExt</span>
				: <span class="var-type">Boolean</span>
				= <span class="var-default">false</span>)</span></a></li><li id="menu-function-usort"><a href="#function-usort"><span class="function-name">usort</span><span>(<span class="var-name">body</span>
				: <span class="var-type">Strting</span>, <span class="var-name">step</span>
				: <span class="var-type">stepper|Boolean</span>, <span class="var-name">caseSensitive</span>
				: <span class="var-type">Boolean</span>
				= <span class="var-default">false</span>)</span></a></li><li id="menu-function-wrap"><a href="#function-wrap"><span class="function-name">wrap</span><span>(<span class="var-name">text</span>
				: <span class="var-type">String</span>, <span class="var-name">…</span>)</span></a></li><li id="menu-function-wrapLine"><a href="#function-wrapLine"><span class="function-name">wrapLine</span><span>(<span class="var-name">text</span>
				: <span class="var-type">String</span>, <span class="var-name">…</span>)</span></a></li></ul></nav><div class="functions"><section class="function" id="function-alias"><h1>alias</h1><p class="resume">
				Créer un alias sur commandReference et ajoute à chaque appel les arguments avant ceux passés à la fonction aliasée.
			</p><p class="back-menu"><a href="#menu-function-alias">←</a><a href="#top">↑</a></p><div role="params"><dl><dt><span class="var-name">name</span>
				: <span class="var-type">String</span></dt><dt><span class="var-param"><span class="var-param-begin">[</span><span class="var-name">params</span> : <span class="var-type">mixed</span>, <span class="var-name">…</span><span class="var-param-end">]</span></span></dt><dt><span class="var-name">commandReference</span>
				: <span class="var-type">String</span></dt></dl></div><p class="back-menu"><a href="#menu-function-alias">←</a><a href="#top">↑</a></p></section><section class="function" id="function-align"><h1>align</h1><p class="resume">
				Aligne les lignes du document ou du paragraphe de la sélection.
			</p><p class="back-menu"><a href="#menu-function-align">←</a><a href="#top">↑</a></p><div role="params"><dl><dt><span class="var-name">split</span>
				: <span class="var-type">RegExp</span>
				= <span class="var-default">[ \t]</span></dt><dd>
					regex pour séparer les colonnes
				</dd><dt><span class="var-name">deliminator</span>
				: <span class="var-type">String</span>
				= <span class="var-default">' '</span></dt><dd>
					chaîne pour délimiter les colonnes
				</dd><dt><span class="var-name">complet</span>
				: <span class="var-type">String</span>
				= <span class="var-default">' '</span></dt><dd>
					chaîne qui remplace les espaces vides
				</dd><dt><span class="var-name">completLast</span>
				: <span class="var-type">Boolean</span>
				= <span class="var-default">false</span></dt><dd>
					Indique si la dernière colonne doit être complétée par complet
				</dd></dl></div><div role="examples"><div class="example"><pre class="resume">150 4051 54
15 6 8</pre><pre class="command"><code>align ' ' |</code></pre><pre class="result">150|4051|54
15 |6   |8 </pre></div></div><p class="back-menu"><a href="#menu-function-align">←</a><a href="#top">↑</a></p></section><section class="function" id="function-apply"><h1>apply</h1><p class="resume">
				Applique command en bougeant le curseur ou la sélection de step lignes vers le bas. Les paramètres supplémentaires seront envoyés à command.
			</p><p class="back-menu"><a href="#menu-function-apply">←</a><a href="#top">↑</a></p><div role="params"><dl><dt><span class="var-name">step</span>
				: <span class="var-type">Number|String</span>
				= <span class="var-default">0</span></dt><dd>
					Si step est de la forme n1-n2, où '-' représente des caractères non numériques, alors n2 représente le nombre de lignes à descendre sans faire command et n1 le step. step représente le nombre de lignes à descendre.
				</dd><dt><span class="var-name">command</span>
				: <span class="var-type">String</span></dt><dt><span class="var-param"><span class="var-param-begin">[</span><span class="var-name">params</span> : <span class="var-type">mixed</span>, <span class="var-name">…</span><span class="var-param-end">]</span></span></dt></dl></div><div role="examples"><div class="example"><pre class="resume">big
bada
boum</pre><pre class="command"><code>apply 2 duplicate</code></pre><pre class="result">big
big
bada
bada
boum
boum</pre></div></div><p class="back-menu"><a href="#menu-function-apply">←</a><a href="#top">↑</a></p></section><section class="function" id="function-between"><h1>between</h1><p class="resume">
				Sélectionne le texte se situant entre 2 chaînes.
			</p><p class="back-menu"><a href="#menu-function-between">←</a><a href="#top">↑</a></p><div role="params"><dl><dt><span class="var-name">s</span>
				: <span class="var-type">String</span></dt><dt><span class="var-name">exclude</span>
				: <span class="var-type">Boolean</span>
				= <span class="var-default">true</span></dt><dd>
					Si false le texte entre s sera sélectionné.
				</dd></dl></div><p class="back-menu"><a href="#menu-function-between">←</a><a href="#top">↑</a></p></section><section class="function" id="function-call"><h1>call</h1><p class="resume">
				Exécute command avec le texte de la sélection ou de la ligne, couper en fragments séparés par deliminator. Les paramètres suivant le deliminator seront ajoutés aux paramètres de command suivis des fragments.
			</p><p class="back-menu"><a href="#menu-function-call">←</a><a href="#top">↑</a></p><div role="params"><dl><dt><span class="var-name">deliminator</span>
				: <span class="var-type">RegExp</span>
				= <span class="var-default">' '</span></dt><dt><span class="var-name">command</span>
				: <span class="var-type">String</span></dt><dt><span class="var-param"><span class="var-param-begin">[</span><span class="var-name">params</span> : <span class="var-type">mixed</span>, <span class="var-name">…</span><span class="var-param-end">]</span></span></dt></dl></div><div role="examples"><div class="example"><pre class="resume">0 1 2 3</pre><pre class="command"><code>call '' replace 'a[i] = 0;\n' i</code></pre><pre class="result">a[0] = 0;
a[1] = 0;
a[2] = 0;
a[3] = 0;
</pre></div></div><p class="back-menu"><a href="#menu-function-call">←</a><a href="#top">↑</a></p></section><section class="function" id="function-change"><h1>change</h1><p class="resume">
				Remplace la sélection ou le 1er paramètre –via une regex représentée par le paramètre suivant– autant de fois qu'il reste de paramètres.
			</p><p class="back-menu"><a href="#menu-function-change">←</a><a href="#top">↑</a></p><div role="params"><dl><dt><span class="var-name">str</span>
				: <span class="var-type">String</span></dt><dd>
					Si une sélection existe ce paramètre n'existe pas.
				</dd><dt><span class="var-name">rgx</span>
				: <span class="var-type">RegExp</span></dt><dt><span class="var-name">remplace</span>
				: <span class="var-type">String</span></dt><dt><span class="var-name">…</span></dt></dl></div><div role="examples"><div class="example"><pre class="command"><code>change "a[i] = i; b[i] = i; c[i] = i;" i 0 1</code></pre><pre class="result">a[0] = 1; b[0] = 1; c[0] = 1;</pre></div></div><p class="back-menu"><a href="#menu-function-change">←</a><a href="#top">↑</a></p></section><section class="function" id="function-changeLine"><h1>changeLine</h1><p class="resume">
				Identique à <a class="ref-function" href="#function-change">change</a> mais sélectionne la ligne si aucune sélection n'existe.
			</p><p class="back-menu"><a href="#menu-function-changeLine">←</a><a href="#top">↑</a></p><div role="params"><dl><dt><span class="var-name">str</span>
				: <span class="var-type">String</span></dt><dd>
					Si une sélection existe ce paramètre n'existe pas.
				</dd><dt><span class="var-name">rgx</span>
				: <span class="var-type">RegExp</span></dt><dt><span class="var-name">remplace</span>
				: <span class="var-type">String</span></dt><dt><span class="var-name">…</span></dt></dl></div><p class="back-menu"><a href="#menu-function-changeLine">←</a><a href="#top">↑</a></p></section><section class="function" id="function-count"><h1>count</h1><p class="resume">
				Compte le nombre de caractères, de lignes, de mots ou de mots longs et l'écrit au niveau du curseur.
			</p><p class="back-menu"><a href="#menu-function-count">←</a><a href="#top">↑</a></p><div role="params"><dl><dt><span class="var-name">opt</span>
				: <span class="var-type">String</span>
				= <span class="var-default">'c'</span></dt><dd>
					c pour caractère ; l pour ligne ; w pour mot ; W pout mot long ; i pour interpréter text.
				</dd><dt><span class="var-name">text</span>
				: <span class="var-type">undefined|String</span></dt><dd>
					Le texte où executer le compteur. Si non spécifiée la sélection ou la ligne sera prise.
				</dd></dl></div><p class="back-menu"><a href="#menu-function-count">←</a><a href="#top">↑</a></p></section><section class="function" id="function-countChar"><h1>countChar</h1><p class="resume">
				Compte le nombre de caractères et l'écrit à la position du curseur.
			</p><p class="back-menu"><a href="#menu-function-countChar">←</a><a href="#top">↑</a></p><div role="params"><dl><dt><span class="var-name">text</span>
				: <span class="var-type">String</span></dt><dt><span class="var-name">opt</span>
				: <span class="var-type">String</span>
				= <span class="var-default">text</span></dt><dd>
					Si opt n'est pas défini alors opt égal text et text égal le texte de la sélection ou de la ligne. Si opt comporte un i alors le texte sera interprété.
				</dd></dl></div><p class="back-menu"><a href="#menu-function-countChar">←</a><a href="#top">↑</a></p></section><section class="function" id="function-countLine"><h1>countLine</h1><p class="resume">
				Compte le nombre de lignes et l'écrit à la position du curseur. Voir <a class="ref-function" href="#function-countChar">countChar</a>.
			</p><p class="back-menu"><a href="#menu-function-countLine">←</a><a href="#top">↑</a></p><div role="params"><dl><dt><span class="var-name">text</span>
				: <span class="var-type">String</span></dt><dt><span class="var-name">opt</span>
				: <span class="var-type">String</span>
				= <span class="var-default">text</span></dt><dd>
					Si opt n'est pas défini alors opt égal text et text égal le texte de la sélection ou de la ligne. Si opt comporte un i alors le texte sera interprété.
				</dd></dl></div><p class="back-menu"><a href="#menu-function-countLine">←</a><a href="#top">↑</a></p></section><section class="function" id="function-countLongWord"><h1>countLongWord</h1><p class="resume">
				Compte le nombre de mots longs et l'écrit à la position du curseur. Un mot long est défini par ce qui n'est pas une lettre, un chiffre, _, - et :. Voir <a class="ref-function" href="#function-countChar">countChar</a>.
			</p><p class="back-menu"><a href="#menu-function-countLongWord">←</a><a href="#top">↑</a></p><div role="params"><dl><dt><span class="var-name">text</span>
				: <span class="var-type">String</span></dt><dt><span class="var-name">opt</span>
				: <span class="var-type">String</span>
				= <span class="var-default">text</span></dt><dd>
					Si opt n'est pas défini alors opt égal text et text égal le texte de la sélection ou de la ligne. Si opt comporte un i alors le texte sera interprété.
				</dd></dl></div><p class="back-menu"><a href="#menu-function-countLongWord">←</a><a href="#top">↑</a></p></section><section class="function" id="function-countRgx"><h1>countRgx</h1><p class="resume">
				Compte le nombre de fragments après avoir couper la chaîne avec la regex.
			</p><p class="back-menu"><a href="#menu-function-countRgx">←</a><a href="#top">↑</a></p><div role="params"><dl><dt><span class="var-name">text</span>
				: <span class="var-type">String</span></dt><dt><span class="var-name">rgx</span>
				: <span class="var-type">RegExp</span></dt><dt><span class="var-name">opt</span>
				: <span class="var-type">undefined|String</span></dt><dd>
					Si un i est dans opt, alors le texte sera interprété. Si opt est undefined alors text égal la sélection ou la ligne.
				</dd></dl></div><p class="back-menu"><a href="#menu-function-countRgx">←</a><a href="#top">↑</a></p></section><section class="function" id="function-countWord"><h1>countWord</h1><p class="resume">
				Compte le nombre de mots et l'écrit à la position du curseur. Un mot est défini par ce qui n'est pas une lettre, un chiffre et un _. Voir <a class="ref-function" href="#function-countChar">countChar</a>.
			</p><p class="back-menu"><a href="#menu-function-countWord">←</a><a href="#top">↑</a></p><div role="params"><dl><dt><span class="var-name">text</span>
				: <span class="var-type">String</span></dt><dt><span class="var-name">opt</span>
				: <span class="var-type">String</span>
				= <span class="var-default">text</span></dt><dd>
					Si opt n'est pas défini alors opt égal text et text égal le texte de la sélection ou de la ligne. Si opt comporte un i alors le texte sera interprété.
				</dd></dl></div><p class="back-menu"><a href="#menu-function-countWord">←</a><a href="#top">↑</a></p></section><section class="function" id="function-createFunction"><h1>createFunction</h1><p class="resume">
				Créer une fonction qui pourra être executée avec <a class="ref-function" href="#function-execFunction">execFunction</a> ou via les commandes demandant des fonctions.
			</p><p class="back-menu"><a href="#menu-function-createFunction">←</a><a href="#top">↑</a></p><div role="params"><dl><dt><dt><span class="var-name">name</span>
				: <span class="var-type">String</span></dt><dt><span class="var-param"><span class="var-param-begin">[</span><span class="var-name">params</span> : <span class="var-type">mixed</span>, <span class="var-name">…</span><span class="var-param-end">]</span></span></dt></dt><dt><span class="var-name">body</span>
				: <span class="var-type">JSCode</span></dt></dl></div><p class="back-menu"><a href="#menu-function-createFunction">←</a><a href="#top">↑</a></p></section><section class="function" id="function-cursor"><h1>cursor</h1><p class="resume">
				Définit la position du cursor : cursor l,c l,c.
			</p><p class="back-menu"><a href="#menu-function-cursor">←</a><a href="#top">↑</a></p><div role="params"><dl><dt><span class="var-name">c1</span>
				: <span class="var-type">String|Number</span></dt><dd>
					Forme l,c : l et c sont optionnels, par défaut la position du curseur. l et c peuvent commencer par '+' ou '-', dans ce cas une opération sera effectuée avec la position actuelle. Ils peuvent également commencer par '*' et c'est la position de fin qui sera prise pour reférence (dernière ligne ou dernière colonne de la ligne). '*' peut être suivi de nombre négatif ou positif, le nombre sera transformé en valeur absolue et soustrait à la position. La lettre b indique qu'on recherhe à partir du début de sélection et un e à partir de la fin. Ces 2 lettres doivent être situées en premier caractère. Un w permet de sélectionner un mot, le W pour des longs mots. Le p permet de sélectionner un paragraphe (sélectionne les lignes composées d'au moins un caractère alpha-numérique). Le P (majuscule) sélectionne toutes les lignes non vides. Le premier p pour monter au début du paragraphe le second pour descendre jusqu'au paragraphe. Si le premier paramètre contient un p alors le paramètre 2 sera remplacé par toute lettre qui suit le premier p. Un nombre devant le p correpond au nombre de paragraphes à sélectionner.
				</dd><dt><span class="var-name">c2</span>
				: <span class="var-type">String|Number</span></dt><dd>
					Si c2 définit une sélection, elle se fera avec comme intervalle les valeurs définies par c1 et c2.
				</dd><dt><span class="var-name">pos</span>
				: <span class="var-type">Boolean</span>
				= <span class="var-default">false</span></dt><dd>
					Permet d'utiliser le curseur 2 comme pointeur après la sélection.
				</dd></dl></div><div role="examples"><div class="example"><pre class="command"><code>cursor ,0 ,*</code></pre><pre class="result">Sélectionne la ligne où se trouve le curseur.</pre></div><div class="example"><pre class="command"><code>cursor -1,0 +1,*-1</code></pre><pre class="result">Sélectionne la ligne précédente et actuelle mais sans le dernier caractère.</pre></div><div class="example"><pre class="command"><code>cursor +,0 +5,*</code></pre><pre class="result">Sélectionne un bloc de 5 lignes commençant à la ligne actuelle.</pre></div><div class="example"><pre class="command"><code>cursor pp</code></pre><pre class="result">Sélectionne le paragraphe où se trouve le curseur.</pre></div></div><p class="back-menu"><a href="#menu-function-cursor">←</a><a href="#top">↑</a></p></section><section class="function" id="function-cut"><h1>cut</h1><p class="resume">
				Idem que <a class="ref-function" href="#function-explode">explode</a> mais les colonnes déjà utilisées sont ignorées.
			</p><p class="back-menu"><a href="#menu-function-cut">←</a><a href="#top">↑</a></p><div role="params"><dl><dt><span class="var-name">rgx</span>
				: <span class="var-type">RegExp</span></dt><dd>
					Le texte de la sélection ou de la ligne sera coupé avec la regex.
				</dd><dt><span class="var-name">cols</span>
				: <span class="var-type">String|Number</span></dt><dd>
					Chaque colonne est séparée par une virgule. Si la colonne est de la forme "-n" alors les colonnes de 0 à n sont récupérées. Si c'est de la forme "n-" alors les colonnes de n à la dernière sont récupérées. Si c'est "-" alors toutes les colonnes sont recupérées.
				</dd><dt><span class="var-name">…</span></dt></dl></div><div role="examples"><div class="example"><pre class="resume">je suis une phrase </pre><pre class="command"><code>cut '( )' 4- 0-4 1 2</code></pre><pre class="result">une phrase je suis </pre></div></div><p class="back-menu"><a href="#menu-function-cut">←</a><a href="#top">↑</a></p></section><section class="function" id="function-decodeuri"><h1>decodeuri</h1><p class="resume">
				Décode la sélection ou la ligne. Si des paramètres sont passés, alors les sépare par des espaces et les décode.
			</p><p class="back-menu"><a href="#menu-function-decodeuri">←</a><a href="#top">↑</a></p><p class="back-menu"><a href="#menu-function-decodeuri">←</a><a href="#top">↑</a></p></section><section class="function" id="function-detach"><h1>detach</h1><p class="resume">
				Supprime la sélection ou str jusqu'à ligne_courante + n.
			</p><p class="back-menu"><a href="#menu-function-detach">←</a><a href="#top">↑</a></p><div role="params"><dl><dt><span class="var-name">str</span>
				: <span class="var-type">String</span></dt><dt><span class="var-name">n</span>
				: <span class="var-type">Stepper</span></dt><dd>
					3 options disponibles : f pour supprimé les textes incomplet car il n'y a pas assez de caractère dans la ligne. m quand str est multiligne permet de ne pas passé à la ligne suivante. l qui permet de supprimé les caractères ce trouvant à gauche du curseur.
				</dd><dt><span class="var-name">…</span></dt></dl></div><div role="examples"><div class="example"><pre class="resume">plop
pl[cursor]op
plop
plop
plop</pre><pre class="command"><code>detach o 3</code></pre><pre class="result">plop
pl[cursor]p
plp
plp
plop</pre></div><div class="example"><pre class="resume">plop
pl[cursor]op
plopidou
plop
plop</pre><pre class="command"><code>detach opi f3</code></pre><pre class="result">plop
pl[cursor]
pldou
pl
plop</pre></div></div><p class="back-menu"><a href="#menu-function-detach">←</a><a href="#top">↑</a></p></section><section class="function" id="function-detachLeft"><h1>detachLeft</h1><p class="resume">
				Identique à <a class="ref-function" href="#function-detach">detach</a> mais le nombre de caractères à droite reste identique.
			</p><p class="back-menu"><a href="#menu-function-detachLeft">←</a><a href="#top">↑</a></p><div role="params"><dl><dt><span class="var-name">str</span>
				: <span class="var-type">String</span></dt><dt><span class="var-name">n</span>
				: <span class="var-type">Stepper</span></dt><dd>
					3 options disponibles : f pour supprimé les textes incomplet car il n'y a pas assez de caractère dans la ligne. m quand str est multiligne permet de ne pas passé à la ligne suivante. l qui permet de supprimé les caractères ce trouvant à gauche du curseur.
				</dd><dt><span class="var-name">…</span></dt></dl></div><p class="back-menu"><a href="#menu-function-detachLeft">←</a><a href="#top">↑</a></p></section><section class="function" id="function-diffSelection"><h1>diffSelection</h1><p class="resume">
				Sélectionne la différence de la sélection. Si une sélection existe, la différence se fera avec cursor(c1, c2)
			</p><p class="back-menu"><a href="#menu-function-diffSelection">←</a><a href="#top">↑</a></p><div role="params"><dl><dt><span class="var-name">c1</span>
				: <span class="var-type">cursor</span></dt><dt><span class="var-name">c2</span>
				: <span class="var-type">cursor</span></dt><dt><span class="var-name">c3</span>
				: <span class="var-type">cursor</span></dt><dt><span class="var-name">c4</span>
				: <span class="var-type">cursor</span></dt></dl></div><p class="back-menu"><a href="#menu-function-diffSelection">←</a><a href="#top">↑</a></p></section><section class="function" id="function-duplicate"><h1>duplicate</h1><p class="resume">
				Duplique la ligne ou la sélection n fois.
			</p><p class="action-key">Cette commande est disponible par le racourci: <span>Ctrl+Alt+D</span></p><p class="back-menu"><a href="#menu-function-duplicate">←</a><a href="#top">↑</a></p><div role="params"><dl><dt><span class="var-name">n</span>
				: <span class="var-type">Number|Stepper</span>
				= <span class="var-default">1</span></dt><dt><span class="var-name">down</span>
				: <span class="var-type">Boolean</span>
				= <span class="var-default">false</span></dt><dd>
					Si ou que n est un nombre négatif, vrai déplace le curseur au niveau du dernier élement dupliqué.
				</dd></dl></div><div role="examples"><div class="example"><pre class="command"><code>duplicate ~2:5</code></pre><pre class="result">duplique 5 fois la ligne une ligne sur 2</pre></div></div><p class="back-menu"><a href="#menu-function-duplicate">←</a><a href="#top">↑</a></p></section><section class="function" id="function-echap"><h1>echap</h1><p class="resume">
				Échappe la sélection ou la ligne.
			</p><p class="back-menu"><a href="#menu-function-echap">←</a><a href="#top">↑</a></p><div role="params"><dl><dt><span class="var-name">str</span>
				: <span class="var-type">undefined|String</span>
				= <span class="var-default">text[text.search(/[^\s]/)]</span></dt><dd>
					Chaîne à protéger. Par défaut, premier caractère de sélection ou de la ligne qui n'est pas un caractère blanc.
				</dd><dt><span class="var-name">strEscape</span>
				: <span class="var-type">String</span>
				= <span class="var-default">'\'</span></dt><dd>
					Chaîne d'échappement.
				</dd><dt><span class="var-name">force</span>
				: <span class="var-type">Boolean</span>
				= <span class="var-default">false</span></dt><dd>
					Si vrai les chaînes déjà protégées seront considérées comme non protégées.
				</dd></dl></div><div role="examples"><div class="example"><pre class="resume">"une chaîne "non" protégée !"</pre><pre class="command"><code>echap</code></pre><pre class="result">"une chaîne \"non\" protégée !"</pre></div></div><p class="back-menu"><a href="#menu-function-echap">←</a><a href="#top">↑</a></p></section><section class="function" id="function-encodeuri"><h1>encodeuri</h1><p class="resume">
				Encode la sélection ou la ligne. Si des paramètres sont passés, alors les sépare par des espaces et l'encode.
			</p><p class="back-menu"><a href="#menu-function-encodeuri">←</a><a href="#top">↑</a></p><p class="back-menu"><a href="#menu-function-encodeuri">←</a><a href="#top">↑</a></p></section><section class="function" id="function-encoding"><h1>encoding</h1><p class="resume">
				Écrit l'encodage du document à la position du curseur.
			</p><p class="back-menu"><a href="#menu-function-encoding">←</a><a href="#top">↑</a></p><p class="back-menu"><a href="#menu-function-encoding">←</a><a href="#top">↑</a></p></section><section class="function" id="function-eval"><h1>eval</h1><p class="resume">
				Exécute la fonction passée en paramètres
			</p><p class="back-menu"><a href="#menu-function-eval">←</a><a href="#top">↑</a></p><div role="params"><dl><dt><span class="var-name">…</span>
				: <span class="var-type">JSCode</span></dt></dl></div><p class="back-menu"><a href="#menu-function-eval">←</a><a href="#top">↑</a></p></section><section class="function" id="function-execFunction"><h1>execFunction</h1><p class="resume">
				Exécute une commande créée par <a class="ref-function" href="#function-createFunction">createFunction</a> ou <a class="ref-function" href="#function-alias">alias</a>.
			</p><p class="back-menu"><a href="#menu-function-execFunction">←</a><a href="#top">↑</a></p><div role="params"><dl><dt><span class="var-name">name</span>
				: <span class="var-type">String</span></dt><dt><span class="var-param"><span class="var-param-begin">[</span><span class="var-name">params</span> : <span class="var-type">mixed</span>, <span class="var-name">…</span><span class="var-param-end">]</span></span></dt></dl></div><p class="back-menu"><a href="#menu-function-execFunction">←</a><a href="#top">↑</a></p></section><section class="function" id="function-explode"><h1>explode</h1><p class="resume">
				Coupe le texte sélectionné ou la ligne en fragments et les affiche dans un ordre donné.
			</p><p class="back-menu"><a href="#menu-function-explode">←</a><a href="#top">↑</a></p><div role="params"><dl><dt><span class="var-name">rgx</span>
				: <span class="var-type">RegExp</span></dt><dd>
					Le texte de la sélection ou de la ligne sera coupé avec la regex.
				</dd><dt><span class="var-name">cols</span>
				: <span class="var-type">String|Number</span></dt><dd>
					Chaque colonne est séparée par une virgule. Si la colonne est de la forme "-n" alors les colonnes de 0 à n sont récupérées. Si c'est de la forme "n-" alors les colonnes de n à la dernière sont récupérées. Si c'est "-" alors toutes les colonnes sont recupérées.
				</dd><dt><span class="var-name">…</span></dt></dl></div><div role="examples"><div class="example"><pre class="resume">je suis une phrase </pre><pre class="command"><code>explode '( )' 4- 0-4</code></pre><pre class="result">une phrase je suis </pre></div></div><p class="back-menu"><a href="#menu-function-explode">←</a><a href="#top">↑</a></p></section><section class="function" id="function-extension"><h1>extension</h1><p class="resume">
				Affiche l'extension du fichier.
			</p><p class="back-menu"><a href="#menu-function-extension">←</a><a href="#top">↑</a></p><p class="back-menu"><a href="#menu-function-extension">←</a><a href="#top">↑</a></p></section><section class="function" id="function-filename"><h1>filename</h1><p class="resume">
				Affiche le nom du fichier.
			</p><p class="back-menu"><a href="#menu-function-filename">←</a><a href="#top">↑</a></p><div role="params"><dl><dt><span class="var-name">noExt</span>
				: <span class="var-type">Boolean</span>
				= <span class="var-default">false</span></dt><dd>
					Supprimer l'extension
				</dd></dl></div><p class="back-menu"><a href="#menu-function-filename">←</a><a href="#top">↑</a></p></section><section class="function" id="function-highlightingMode"><h1>highlightingMode</h1><p class="resume">
				Écrit la couleur synthaxique du document à la position du curseur.
			</p><p class="back-menu"><a href="#menu-function-highlightingMode">←</a><a href="#top">↑</a></p><p class="back-menu"><a href="#menu-function-highlightingMode">←</a><a href="#top">↑</a></p></section><section class="function" id="function-highlightingModeCursor"><h1>highlightingModeCursor</h1><p class="resume">
				Écrit à la position du curseur la couleur synthaxique d'où il se trouve.
			</p><p class="back-menu"><a href="#menu-function-highlightingModeCursor">←</a><a href="#top">↑</a></p><p class="back-menu"><a href="#menu-function-highlightingModeCursor">←</a><a href="#top">↑</a></p></section><section class="function" id="function-insert"><h1>insert</h1><p class="resume">
				Insert la sélection ou str jusqu'à ligne_courante + n
			</p><p class="back-menu"><a href="#menu-function-insert">←</a><a href="#top">↑</a></p><div role="params"><dl><dt><span class="var-name">str</span>
				: <span class="var-type">String</span></dt><dd>
					Si une sélection existe ce paramètre n'existe pas.
				</dd><dt><span class="var-name">n</span>
				: <span class="var-type">Stepper</span></dt><dd>
					Seul l'option f existe, pour forcer l'insertion dans une ligne vide.
				</dd><dt><span class="var-name">…</span></dt></dl></div><p class="back-menu"><a href="#menu-function-insert">←</a><a href="#top">↑</a></p></section><section class="function" id="function-insertEval"><h1>insertEval</h1><p class="resume">
				Exécute la fonction passée en paramètres
			
				Exécute la fonction passée en paramètres puis affiche le retour à la position courante.
			</p><p class="back-menu"><a href="#menu-function-insertEval">←</a><a href="#top">↑</a></p><div role="params"><dl><dt><span class="var-name">…</span>
				: <span class="var-type">JSCode</span></dt><dd>
					Un "return " est ajouté devant le code.
				</dd></dl></div><p class="back-menu"><a href="#menu-function-insertEval">←</a><a href="#top">↑</a></p></section><section class="function" id="function-insertLeft"><h1>insertLeft</h1><p class="resume">
				Identique à <a class="ref-function" href="#function-insert">insert</a> mais le nombre de caractères à droite reste identique. S'il n'y a pas assez de caractères l'insertion n'est pas faite pour la ligne.
			</p><p class="back-menu"><a href="#menu-function-insertLeft">←</a><a href="#top">↑</a></p><div role="params"><dl><dt><span class="var-name">str</span>
				: <span class="var-type">String</span></dt><dd>
					Si une sélection existe ce paramètre n'existe pas.
				</dd><dt><span class="var-name">n</span>
				: <span class="var-type">Stepper</span></dt><dd>
					Seul l'option f existe, pour forcer l'insertion dans une ligne vide.
				</dd><dt><span class="var-name">…</span></dt></dl></div><p class="back-menu"><a href="#menu-function-insertLeft">←</a><a href="#top">↑</a></p></section><section class="function" id="function-interval"><h1>interval</h1><p class="resume">
				Exécute la fonction command en envoyant comme paramètre l'interval et après y avoir ajouté les paramètres supplémentaires.
			</p><p class="back-menu"><a href="#menu-function-interval">←</a><a href="#top">↑</a></p><div role="params"><dl><dt><span class="var-name">start</span>
				: <span class="var-type">Number|String</span></dt><dd>
					Si start est de la forme n1-n2 alors end correspond à l'incrémentation utilisé pour aller de start à end et start = n1 et end = n2. n1 = 0 ; n2 = 1.
				</dd><dt><span class="var-name">end</span>
				: <span class="var-type">Number</span></dt><dt><span class="var-name">command</span>
				: <span class="var-type">String</span></dt><dt><span class="var-param"><span class="var-param-begin">[</span><span class="var-name">params</span> : <span class="var-type">mixed</span>, <span class="var-name">…</span><span class="var-param-end">]</span></span></dt></dl></div><div role="examples"><div class="example"><pre class="command"><code>interval 0 4 replace "a[i] = " i</code></pre><pre class="result">a[0] = a[1] = a[2] = a[3] = a[4] = </pre></div></div><p class="back-menu"><a href="#menu-function-interval">←</a><a href="#top">↑</a></p></section><section class="function" id="function-join2"><h1>join2</h1><p class="resume">
				Joint les lignes sélectionnées ou le document entier par deliminator.
			</p><p class="back-menu"><a href="#menu-function-join2">←</a><a href="#top">↑</a></p><div role="params"><dl><dt><span class="var-name">deliminator</span>
				: <span class="var-type">String</span>
				= <span class="var-default">''</span></dt><dt><span class="var-name">…</span></dt></dl></div><div role="examples"><div class="example"><pre class="resume">je
suis
un
exemple
simple</pre><pre class="command"><code>join2 ' ' -</code></pre><pre class="result">je suis-un exemple-simple</pre></div></div><p class="back-menu"><a href="#menu-function-join2">←</a><a href="#top">↑</a></p></section><section class="function" id="function-kill"><h1>kill</h1><p class="resume">
				Supprime la ligne ou la sélection représentée par c1 et c2 ou supprime la ligne à la position du curseur ou la sélection.
			</p><p class="back-menu"><a href="#menu-function-kill">←</a><a href="#top">↑</a></p><div role="params"><dl><dt><span class="var-name">c1</span>
				: <span class="var-type">cursor</span></dt><dt><span class="var-name">c2</span>
				: <span class="var-type">cursor</span></dt></dl></div><p class="back-menu"><a href="#menu-function-kill">←</a><a href="#top">↑</a></p></section><section class="function" id="function-length"><h1>length</h1><p class="resume">
				Compte le nombre de caractères passés en paramètres et l'écrit à la position du curseur. Ajoute nombre_paramètre - 1 à la taille.
			</p><p class="back-menu"><a href="#menu-function-length">←</a><a href="#top">↑</a></p><div role="params"><dl><dt><span class="var-name">…</span>
				: <span class="var-type">String</span></dt></dl></div><div role="examples"><div class="example"><pre class="command"><code>length un exemple simple</code></pre><pre class="result">17</pre></div></div><p class="back-menu"><a href="#menu-function-length">←</a><a href="#top">↑</a></p></section><section class="function" id="function-mimeType"><h1>mimeType</h1><p class="resume">
				Écrit le mimeType du document à la position du curseur.
			</p><p class="back-menu"><a href="#menu-function-mimeType">←</a><a href="#top">↑</a></p><p class="back-menu"><a href="#menu-function-mimeType">←</a><a href="#top">↑</a></p></section><section class="function" id="function-mv"><h1>mv</h1><p class="resume">
				Bouge le texte de la sélection ou de la ligne
			</p><p class="back-menu"><a href="#menu-function-mv">←</a><a href="#top">↑</a></p><div role="params"><dl><dt><span class="var-name">newPos</span>
				: <span class="var-type">cursor</span></dt></dl></div><p class="back-menu"><a href="#menu-function-mv">←</a><a href="#top">↑</a></p></section><section class="function" id="function-mvLine"><h1>mvLine</h1><p class="resume">
				Bouge la ligne ou le paragraphe sélectionné
			</p><p class="back-menu"><a href="#menu-function-mvLine">←</a><a href="#top">↑</a></p><div role="params"><dl><dt><span class="var-name">newPos</span>
				: <span class="var-type">cursor</span></dt></dl></div><p class="back-menu"><a href="#menu-function-mvLine">←</a><a href="#top">↑</a></p></section><section class="function" id="function-natsort2"><h1>natsort2</h1><p class="resume">
				Trie les lignes de la sélection ou l'ensemble du document par ordre naturel.
			</p><p class="back-menu"><a href="#menu-function-natsort2">←</a><a href="#top">↑</a></p><div role="params"><dl><dt><span class="var-name">step</span>
				: <span class="var-type">stepper|Boolean</span></dt><dt><span class="var-name">caseSensitive</span>
				: <span class="var-type">Boolean</span>
				= <span class="var-default">false</span></dt><dd>
					Si step n'est pas du type stepper et que caseSensitive est faux, alors caseSensitive = false
				</dd></dl></div><p class="back-menu"><a href="#menu-function-natsort2">←</a><a href="#top">↑</a></p></section><section class="function" id="function-nreplace"><h1>nreplace</h1><p class="resume">
				Utilise <a class="ref-function" href="#function-rmNCharacter">rmNCharacter</a> puis <a class="ref-function" href="#function-insert">insert</a>.
			</p><p class="back-menu"><a href="#menu-function-nreplace">←</a><a href="#top">↑</a></p><div role="params"><dl><dt><span class="var-name">n</span>
				: <span class="var-type">Number</span></dt><dd>
					Paramètre passé à <a class="ref-function" href="#function-rmNCharacter">rmNCharacter</a>.
				</dd><dt><span class="var-name">str</span>
				: <span class="var-type">String</span></dt><dd>
					Paramètre passé à <a class="ref-function" href="#function-insert">insert</a>.
				</dd><dt><span class="var-name">line</span>
				: <span class="var-type">Stepper</span></dt><dd>
					Paramètre passé à <a class="ref-function" href="#function-rmNCharacter">rmNCharacter</a> puis <a class="ref-function" href="#function-insert">insert</a>.
				</dd><dt><span class="var-name">…</span></dt></dl></div><p class="back-menu"><a href="#menu-function-nreplace">←</a><a href="#top">↑</a></p></section><section class="function" id="function-nreplaceLeft"><h1>nreplaceLeft</h1><p class="resume">
				Identique à <a class="ref-function" href="#function-nreplace">nreplace</a> mais le nombre de caractères à droite reste identique.
			</p><p class="back-menu"><a href="#menu-function-nreplaceLeft">←</a><a href="#top">↑</a></p><div role="params"><dl><dt><span class="var-name">n</span>
				: <span class="var-type">Number</span></dt><dd>
					Paramètre passé à <a class="ref-function" href="#function-rmNCharacter">rmNCharacter</a>.
				</dd><dt><span class="var-name">str</span>
				: <span class="var-type">String</span></dt><dd>
					Paramètre passé à <a class="ref-function" href="#function-insert">insert</a>.
				</dd><dt><span class="var-name">line</span>
				: <span class="var-type">Stepper</span></dt><dd>
					Paramètre passé à <a class="ref-function" href="#function-rmNCharacter">rmNCharacter</a> puis <a class="ref-function" href="#function-insert">insert</a>.
				</dd><dt><span class="var-name">…</span></dt></dl></div><p class="back-menu"><a href="#menu-function-nreplaceLeft">←</a><a href="#top">↑</a></p></section><section class="function" id="function-outer"><h1>outer</h1><p class="resume">
				Met le texte de la ligne ou de la sélection au milieu des chaînes passées en paramètres.
			</p><p class="back-menu"><a href="#menu-function-outer">←</a><a href="#top">↑</a></p><div role="params"><dl><dt><span class="var-name">text</span>
				: <span class="var-type">String</span></dt><dt><span class="var-name">…</span></dt></dl></div><div role="examples"><div class="example"><pre class="resume">plop</pre><pre class="command"><code>outer a</code></pre><pre class="result">aplop</pre></div><div class="example"><pre class="resume">plop</pre><pre class="command"><code>outer [ ]</code></pre><pre class="result">[plop]</pre></div></div><p class="back-menu"><a href="#menu-function-outer">←</a><a href="#top">↑</a></p></section><section class="function" id="function-outerLine"><h1>outerLine</h1><p class="resume">
				Effectue <a class="ref-function" href="#function-outer">outer</a> sur chaque ligne de la sélection.
			</p><p class="back-menu"><a href="#menu-function-outerLine">←</a><a href="#top">↑</a></p><div role="params"><dl><dt><span class="var-name">text</span>
				: <span class="var-type">String</span></dt><dt><span class="var-name">…</span></dt></dl></div><div role="examples"><div class="example"><pre class="resume">plop
plop</pre><pre class="command"><code>outerLine :</code></pre><pre class="result">:plop
:plop</pre></div><div class="example"><pre class="resume">plop
plop
plop</pre><pre class="command"><code>outerLine [ ]</code></pre><pre class="result">[plop]
[plop]
[plop]</pre></div></div><p class="back-menu"><a href="#menu-function-outerLine">←</a><a href="#top">↑</a></p></section><section class="function" id="function-printEval"><h1>printEval</h1><p class="resume">
				Exécute la fonction passée en paramètres
			
				Exécute la fonction passée en paramètres puis affiche le retour à la position courante.
			</p><p class="back-menu"><a href="#menu-function-printEval">←</a><a href="#top">↑</a></p><div role="params"><dl><dt><span class="var-name">…</span>
				: <span class="var-type">JSCode</span></dt></dl></div><p class="back-menu"><a href="#menu-function-printEval">←</a><a href="#top">↑</a></p></section><section class="function" id="function-random"><h1>random</h1><p class="resume">
				Affiche au hasart un chiffre comprit entre min et max.
			</p><p class="back-menu"><a href="#menu-function-random">←</a><a href="#top">↑</a></p><div role="params"><dl><dt><span class="var-name">min</span>
				: <span class="var-type">Number</span>
				= <span class="var-default">0</span></dt><dt><span class="var-name">max</span>
				: <span class="var-type">Number</span>
				= <span class="var-default">99</span></dt></dl></div><p class="back-menu"><a href="#menu-function-random">←</a><a href="#top">↑</a></p></section><section class="function" id="function-range"><h1>range</h1><p class="resume">
				Affiche un intervalle de nombre à la position du curseur.
			</p><p class="back-menu"><a href="#menu-function-range">←</a><a href="#top">↑</a></p><div role="params"><dl><dt><span class="var-name">begin</span>
				: <span class="var-type">Number</span>
				= <span class="var-default">0</span></dt><dt><span class="var-name">end</span>
				: <span class="var-type">Number</span>
				= <span class="var-default">begin</span></dt><dd>
					Si ce n'est pas un type Number alors tous les paramètres sont décalés (end = begin, …) et begin = 0.
				</dd><dt><span class="var-name">deliminator</span>
				: <span class="var-type">String</span>
				= <span class="var-default">' '</span></dt><dt><span class="var-name">step</span>
				: <span class="var-type">Number</span>
				= <span class="var-default">1</span></dt><dt><span class="var-name">selected</span>
				: <span class="var-type">Boolean</span>
				= <span class="var-default">false</span></dt></dl></div><p class="back-menu"><a href="#menu-function-range">←</a><a href="#top">↑</a></p></section><section class="function" id="function-repeat"><h1>repeat</h1><p class="resume">
				Identique à <a class="ref-function" href="#function-replace">replace</a> hormis le fait que le texte de la sélection ou de str est écrit.
			</p><p class="back-menu"><a href="#menu-function-repeat">←</a><a href="#top">↑</a></p><div role="params"><dl><dt><span class="var-name">str</span>
				: <span class="var-type">String</span></dt><dd>
					Si une sélection existe ce paramètre n'existe pas.
				</dd><dt><span class="var-name">rgx</span>
				: <span class="var-type">RegExp</span></dt><dt><span class="var-name">remplace</span>
				: <span class="var-type">String</span></dt><dt><span class="var-name">…</span></dt></dl></div><p class="back-menu"><a href="#menu-function-repeat">←</a><a href="#top">↑</a></p></section><section class="function" id="function-repeatLine"><h1>repeatLine</h1><p class="resume">
				Identique à <a class="ref-function" href="#function-repeat">repeat</a> mais la ligne est automatiquement sélectionnée.
			</p><p class="back-menu"><a href="#menu-function-repeatLine">←</a><a href="#top">↑</a></p><div role="params"><dl><dt><span class="var-name">rgx</span>
				: <span class="var-type">RegExp</span></dt><dt><span class="var-name">remplace</span>
				: <span class="var-type">String</span></dt><dt><span class="var-name">…</span></dt></dl></div><p class="back-menu"><a href="#menu-function-repeatLine">←</a><a href="#top">↑</a></p></section><section class="function" id="function-replace"><h1>replace</h1><p class="resume">
				Remplace le texte str ou la sélection par les remplace.
			</p><p class="back-menu"><a href="#menu-function-replace">←</a><a href="#top">↑</a></p><div role="params"><dl><dt><span class="var-name">str</span>
				: <span class="var-type">String</span></dt><dd>
					Si une sélection existe ce paramètre n'existe pas.
				</dd><dt><span class="var-name">rgx</span>
				: <span class="var-type">RegExp</span></dt><dt><span class="var-name">remplace</span>
				: <span class="var-type">String</span></dt><dt><span class="var-name">…</span></dt></dl></div><div role="examples"><div class="example"><pre class="command"><code>replace "a[i] = i; " i 0 1 2</code></pre><pre class="result">a[0] = 0; a[1] = 1; a[2] = 2; </pre></div></div><p class="back-menu"><a href="#menu-function-replace">←</a><a href="#top">↑</a></p></section><section class="function" id="function-replaceLine"><h1>replaceLine</h1><p class="resume">
				Identique à <a class="ref-function" href="#function-replace">replace</a> mais la ligne est automatiquement sélectionnée.
			</p><p class="back-menu"><a href="#menu-function-replaceLine">←</a><a href="#top">↑</a></p><div role="params"><dl><dt><span class="var-name">rgx</span>
				: <span class="var-type">RegExp</span></dt><dt><span class="var-name">remplace</span>
				: <span class="var-type">String</span></dt><dt><span class="var-name">…</span></dt></dl></div><p class="back-menu"><a href="#menu-function-replaceLine">←</a><a href="#top">↑</a></p></section><section class="function" id="function-reverse"><h1>reverse</h1><p class="resume">
				Inverse la position des lettres de chaque ligne de sélection ou de la ligne où se trouve le curseur.
			</p><p class="back-menu"><a href="#menu-function-reverse">←</a><a href="#top">↑</a></p><div role="params"><dl><dt><span class="var-name">group</span>
				: <span class="var-type">Number</span>
				= <span class="var-default">1</span></dt><dd>
					Grouper les lignes de taille de group
				</dd><dt><span class="var-name">step</span>
				: <span class="var-type">Number</span>
				= <span class="var-default">0</span></dt><dd>
					Ignorer le reverse des lignes toutes les step fois
				</dd><dt><span class="var-name">prepend</span>
				: <span class="var-type">Boolean</span>
				= <span class="var-default">false</span></dt><dd>
					Si 0, step += jump - lines.length % jump
				</dd></dl></div><div role="examples"><div class="example"><pre class="resume">un exemple</pre><pre class="command"><code>reverse</code></pre><pre class="result">elpmexe nu</pre></div></div><p class="back-menu"><a href="#menu-function-reverse">←</a><a href="#top">↑</a></p></section><section class="function" id="function-reverseLine"><h1>reverseLine</h1><p class="resume">
				Inverse la position des lignes de la sélection.
			</p><p class="back-menu"><a href="#menu-function-reverseLine">←</a><a href="#top">↑</a></p><div role="params"><dl><dt><span class="var-name">group</span>
				: <span class="var-type">Number</span>
				= <span class="var-default">1</span></dt><dd>
					Grouper les lignes de taille de group
				</dd><dt><span class="var-name">step</span>
				: <span class="var-type">Number</span>
				= <span class="var-default">0</span></dt><dd>
					Ignorer le reverse des lignes toutes les step fois
				</dd><dt><span class="var-name">prepend</span>
				: <span class="var-type">Boolean</span>
				= <span class="var-default">false</span></dt><dd>
					Si 0, step += jump - lines.length % jump
				</dd></dl></div><div role="examples"><div class="example"><pre class="resume">un
exemple
simple
de
reverseLine</pre><pre class="command"><code>reverseLine</code></pre><pre class="result">reverseLine
de
simple
exemple
un</pre></div><div class="example"><pre class="resume">un
exemple
simple
de
reverseLine</pre><pre class="command"><code>reverseLine 2</code></pre><pre class="result">de
reverseLine
exemple
simple
un</pre></div><div class="example"><pre class="resume">un
exemple
simple
de
reverseLine</pre><pre class="command"><code>reverseLine 3 2</code></pre><pre class="result">de
reverseLine
un
exemple
simple</pre></div><div class="example"><pre class="resume">un
exemple
simple
de
reverseLine</pre><pre class="command"><code>reverseLine 3 2 1</code></pre><pre class="result">reverseLine
exemple
simple
de
un</pre></div></div><p class="back-menu"><a href="#menu-function-reverseLine">←</a><a href="#top">↑</a></p></section><section class="function" id="function-reverseWord"><h1>reverseWord</h1><p class="resume">
				Inverse la position des mots de chaque ligne de la sélection ou de la ligne où se trouve le curseur.
			</p><p class="back-menu"><a href="#menu-function-reverseWord">←</a><a href="#top">↑</a></p><div role="params"><dl><dt><span class="var-name">group</span>
				: <span class="var-type">Number</span>
				= <span class="var-default">1</span></dt><dd>
					Grouper les lignes de taille de group
				</dd><dt><span class="var-name">step</span>
				: <span class="var-type">Number</span>
				= <span class="var-default">0</span></dt><dd>
					Ignorer le reverse des lignes toutes les step fois
				</dd><dt><span class="var-name">prepend</span>
				: <span class="var-type">Boolean</span>
				= <span class="var-default">false</span></dt><dd>
					Si 0, step += jump - lines.length % jump
				</dd><dt><span class="var-name">boundaryBegin</span>
				: <span class="var-type">Boolean</span>
				= <span class="var-default">false</span></dt><dd>
					Ignorer les espaces de début
				</dd><dt><span class="var-name">boundaryEnd</span>
				: <span class="var-type">Boolean</span>
				= <span class="var-default">false</span></dt><dd>
					Ignorer les espaces de fin
				</dd></dl></div><div role="examples"><div class="example"><pre class="resume">je suis un exemple</pre><pre class="command"><code>reverseWord</code></pre><pre class="result">exemple un suis je</pre></div></div><p class="back-menu"><a href="#menu-function-reverseWord">←</a><a href="#top">↑</a></p></section><section class="function" id="function-rewindSelection"><h1>rewindSelection</h1><p class="resume">
				Met le curseur au début de la sélection et annule celle-ci.
			</p><p class="back-menu"><a href="#menu-function-rewindSelection">←</a><a href="#top">↑</a></p><p class="back-menu"><a href="#menu-function-rewindSelection">←</a><a href="#top">↑</a></p></section><section class="function" id="function-rgxinterval"><h1>rgxinterval</h1><p class="resume">
				Exécute la fonction command en envoyant comme paramètre l'intervalle et après y avoir ajouté les paramètres supplémentaires. Pour chaque intervalle les morceaux de str qui correspondent à regex sont remplacés par la valeur de l'intervalle.
			</p><p class="back-menu"><a href="#menu-function-rgxinterval">←</a><a href="#top">↑</a></p><div role="params"><dl><dt><span class="var-name">str</span>
				: <span class="var-type">String</span></dt><dt><span class="var-name">rgx</span>
				: <span class="var-type">RegExp</span></dt><dt><dt><span class="var-name">start</span>
				: <span class="var-type">Number|String</span></dt><dd>
					Si start est de la forme n1-n2 alors end correspond à l'incrémentation utilisé pour aller de start à end et start = n1 et end = n2. n1 = 0 ; n2 = 1.
				</dd><dt><span class="var-name">end</span>
				: <span class="var-type">Number</span></dt><dt><span class="var-name">command</span>
				: <span class="var-type">String</span></dt><dt><span class="var-param"><span class="var-param-begin">[</span><span class="var-name">params</span> : <span class="var-type">mixed</span>, <span class="var-name">…</span><span class="var-param-end">]</span></span></dt></dt></dl></div><div role="examples"><div class="example"><pre class="command"><code>rgxinterval "si" i 1 3 replace "a[] = i;\n" i b c</code></pre><pre class="result">a[] = b;
a[] = c;
a[] = s1;
a[] = s2;
a[] = s3;</pre></div></div><p class="back-menu"><a href="#menu-function-rgxinterval">←</a><a href="#top">↑</a></p></section><section class="function" id="function-rmLinesWithOnly"><h1>rmLinesWithOnly</h1><p class="resume">
				Supprime les lignes de la sélection ou de l'ensemble du document qui comporte tous les caractères d'un des arguments
			</p><p class="back-menu"><a href="#menu-function-rmLinesWithOnly">←</a><a href="#top">↑</a></p><div role="params"><dl><dt><span class="var-name">toFind</span>
				: <span class="var-type">String</span>
				= <span class="var-default">''</span></dt><dd>
					Si une chaîne vide alors supprime les lignes vides.
				</dd><dt><span class="var-name">…</span></dt></dl></div><p class="back-menu"><a href="#menu-function-rmLinesWithOnly">←</a><a href="#top">↑</a></p></section><section class="function" id="function-rmNCharacter"><h1>rmNCharacter</h1><p class="resume">
				Supprime n caractères à gauche si négatif ou n caractères à droite si positif
			</p><p class="back-menu"><a href="#menu-function-rmNCharacter">←</a><a href="#top">↑</a></p><div role="params"><dl><dt><span class="var-name">n</span>
				: <span class="var-type">Number</span></dt><dt><span class="var-name">stepper</span>
				: <span class="var-type">Stepper</span>
				= <span class="var-default">'1'</span></dt><dd>
					L'option f permet de forcer la suppression sur les lignes suivantes.
				</dd><dt><span class="var-name">n2</span>
				: <span class="var-type">Number</span></dt><dt><span class="var-name">stepper2</span>
				: <span class="var-type">Stepper</span>
				= <span class="var-default">argument[argument.length-2] || '1'</span></dt><dt><span class="var-name">…</span></dt></dl></div><p class="back-menu"><a href="#menu-function-rmNCharacter">←</a><a href="#top">↑</a></p></section><section class="function" id="function-rmNCharacterLeft"><h1>rmNCharacterLeft</h1><p class="resume">
				Identique à <a class="ref-function" href="#function-rmNCharacter">rmNCharacter</a> mais le nombre de caractères à droite reste identique.
			</p><p class="back-menu"><a href="#menu-function-rmNCharacterLeft">←</a><a href="#top">↑</a></p><div role="params"><dl><dt><span class="var-name">n</span>
				: <span class="var-type">Number</span></dt><dt><span class="var-name">stepper</span>
				: <span class="var-type">Stepper</span>
				= <span class="var-default">'1'</span></dt><dd>
					L'option f permet de forcer la suppression sur les lignes suivantes.
				</dd><dt><span class="var-name">n2</span>
				: <span class="var-type">Number</span></dt><dt><span class="var-name">stepper2</span>
				: <span class="var-type">Stepper</span>
				= <span class="var-default">argument[argument.length-2] || '1'</span></dt><dt><span class="var-name">…</span></dt></dl></div><p class="back-menu"><a href="#menu-function-rmNCharacterLeft">←</a><a href="#top">↑</a></p></section><section class="function" id="function-rmText"><h1>rmText</h1><p class="resume">
				Supprime des fragments de chaîne soit de la sélection soit directement autour du curseur.
			</p><p class="back-menu"><a href="#menu-function-rmText">←</a><a href="#top">↑</a></p><div role="params"><dl><dt><span class="var-name">text</span>
				: <span class="var-type">String</span>
				= <span class="var-default">' '</span></dt><dt><span class="var-name">…</span></dt></dl></div><p class="back-menu"><a href="#menu-function-rmText">←</a><a href="#top">↑</a></p></section><section class="function" id="function-rmTextOf"><h1>rmTextOf</h1><p class="resume">
				Identique à <a class="ref-function" href="#function-rmText">rmText</a> mais les fragments de texte sont les caractères.
			</p><p class="back-menu"><a href="#menu-function-rmTextOf">←</a><a href="#top">↑</a></p><div role="params"><dl><dt><span class="var-name">text</span>
				: <span class="var-type">String</span>
				= <span class="var-default">' \t\v'</span></dt><dt><span class="var-name">…</span></dt><dd>
					Si plusieurs paramètres sont présents, le caractère espace est ajouté.
				</dd></dl></div><p class="back-menu"><a href="#menu-function-rmTextOf">←</a><a href="#top">↑</a></p></section><section class="function" id="function-rnatsort"><h1>rnatsort</h1><p class="resume">
				Trie les lignes de la sélection ou l'ensemble du document par ordre naturel inversé.
			</p><p class="back-menu"><a href="#menu-function-rnatsort">←</a><a href="#top">↑</a></p><div role="params"><dl><dt><span class="var-name">step</span>
				: <span class="var-type">stepper|Boolean</span></dt><dt><span class="var-name">caseSensitive</span>
				: <span class="var-type">Boolean</span>
				= <span class="var-default">false</span></dt><dd>
					Si step n'est pas du type stepper et que caseSensitive est faux, alors caseSensitive = false
				</dd></dl></div><p class="back-menu"><a href="#menu-function-rnatsort">←</a><a href="#top">↑</a></p></section><section class="function" id="function-romanNumeral"><h1>romanNumeral</h1><p class="resume">
				Écrit un nombre dans sa forme romaine. A partir de 3999 les résultats peuvent être erronés. Si le nombre n'est pas compris entre 0 et 4999 la  fonction ne fait rien.
			</p><p class="back-menu"><a href="#menu-function-romanNumeral">←</a><a href="#top">↑</a></p><div role="params"><dl><dt><span class="var-name">n</span>
				: <span class="var-type">Number</span></dt></dl></div><p class="back-menu"><a href="#menu-function-romanNumeral">←</a><a href="#top">↑</a></p></section><section class="function" id="function-rsort"><h1>rsort</h1><p class="resume">
				Trie les lignes de la sélection ou l'ensemble du document par ordre inverse.
			</p><p class="back-menu"><a href="#menu-function-rsort">←</a><a href="#top">↑</a></p><div role="params"><dl><dt><span class="var-name">step</span>
				: <span class="var-type">stepper|Boolean</span></dt><dt><span class="var-name">caseSensitive</span>
				: <span class="var-type">Boolean</span>
				= <span class="var-default">false</span></dt><dd>
					Si step n'est pas du type stepper et que caseSensitive est faux, alors caseSensitive = false
				</dd></dl></div><p class="back-menu"><a href="#menu-function-rsort">←</a><a href="#top">↑</a></p></section><section class="function" id="function-rusort"><h1>rusort</h1><p class="resume">
				Trie inverse de <a class="ref-function" href="#function-usort">usort</a>.
			</p><p class="back-menu"><a href="#menu-function-rusort">←</a><a href="#top">↑</a></p><div role="params"><dl><dt><span class="var-name">body</span>
				: <span class="var-type">Strting</span></dt><dd>
					Correspond au nom d'une fonction ou d'un corps de fonction. Si body est un corps de fonction et que return n'existe pas, il est ajouté au début. 2 paramètrte sont passé à la fonction : a et b.
				</dd><dt><span class="var-name">step</span>
				: <span class="var-type">stepper|Boolean</span></dt><dt><span class="var-name">caseSensitive</span>
				: <span class="var-type">Boolean</span>
				= <span class="var-default">false</span></dt></dl></div><p class="back-menu"><a href="#menu-function-rusort">←</a><a href="#top">↑</a></p></section><section class="function" id="function-rwrap"><h1>rwrap</h1><p class="resume">
				Identique à <a class="ref-function" href="#function-wrap">wrap</a> mais inverse l'ordre des caractères de la seconde chaîne.
			</p><p class="back-menu"><a href="#menu-function-rwrap">←</a><a href="#top">↑</a></p><div role="params"><dl><dt><span class="var-name">text</span>
				: <span class="var-type">String</span></dt><dt><span class="var-name">…</span></dt></dl></div><p class="back-menu"><a href="#menu-function-rwrap">←</a><a href="#top">↑</a></p></section><section class="function" id="function-rwrapLine"><h1>rwrapLine</h1><p class="resume">
				Effectue <a class="ref-function" href="#function-rwrap">rwrap</a> sur chaque ligne de la sélection.
			</p><p class="back-menu"><a href="#menu-function-rwrapLine">←</a><a href="#top">↑</a></p><div role="params"><dl><dt><span class="var-name">text</span>
				: <span class="var-type">String</span></dt><dt><span class="var-name">…</span></dt></dl></div><p class="back-menu"><a href="#menu-function-rwrapLine">←</a><a href="#top">↑</a></p></section><section class="function" id="function-select"><h1>select</h1><p class="resume">
				Sélectionne le texte entre begin et end compris.
			</p><p class="back-menu"><a href="#menu-function-select">←</a><a href="#top">↑</a></p><div role="params"><dl><dt><span class="var-name">begin</span>
				: <span class="var-type">String</span></dt><dt><span class="var-name">end</span>
				: <span class="var-type">String</span></dt><dt><span class="var-name">exclude</span>
				: <span class="var-type">Boolean</span>
				= <span class="var-default">false</span></dt><dd>
					Si true le texte représenté par begin et end ne sera pas sélectionné.
				</dd></dl></div><p class="back-menu"><a href="#menu-function-select">←</a><a href="#top">↑</a></p></section><section class="function" id="function-selectBlock"><h1>selectBlock</h1><p class="resume">
				Sélection du début de la ligne de sélection à la fin de la ligne de la sélection. Si aucune sélection, sélectionne tout le document.
			</p><p class="back-menu"><a href="#menu-function-selectBlock">←</a><a href="#top">↑</a></p><p class="back-menu"><a href="#menu-function-selectBlock">←</a><a href="#top">↑</a></p></section><section class="function" id="function-set-always-write-namespace"><h1>set-always-write-namespace</h1><p class="resume">
				Définit si le namespace doit être écrit pat la fonction <a class="ref-function" href="#function-tag">tag</a> même s'il est déjà indiqué dans le nom.
			</p><p class="back-menu"><a href="#menu-function-set-always-write-namespace">←</a><a href="#top">↑</a></p><div role="params"><dl><dt><span class="var-name">always</span>
				: <span class="var-type">Boolean</span>
				= <span class="var-default">false</span></dt></dl></div><p class="back-menu"><a href="#menu-function-set-always-write-namespace">←</a><a href="#top">↑</a></p></section><section class="function" id="function-set-call-interpret-string"><h1>set-call-interpret-string</h1><p class="resume">
				Définit si les chaînes de caractères passées en paramètres dans les fonctions doivent être interprétées.
			</p><p class="back-menu"><a href="#menu-function-set-call-interpret-string">←</a><a href="#top">↑</a></p><div role="params"><dl><dt>
				: <span class="var-type">Boolean</span></dt></dl></div><div role="examples"><div class="example"><pre class="command"><code>insertText 'un\nexemple'</code></pre><pre class="result">un
example</pre></div><div class="example"><pre class="command"><code>insertText "un\nexemple"</code></pre><pre class="result">un
example</pre></div><div class="example"><pre class="command"><code>insertText un\nexemple</code></pre><pre class="result">unexample</pre></div><div class="example"><pre class="command"><code>insertText un\\nexemple</code></pre><pre class="result">un
example</pre></div></div><p class="back-menu"><a href="#menu-function-set-call-interpret-string">←</a><a href="#top">↑</a></p></section><section class="function" id="function-set-namespace-tag"><h1>set-namespace-tag</h1><p class="resume">
				Définit le namespace à ajouter pour la fonction <a class="ref-function" href="#function-tag">tag</a>.
			</p><p class="back-menu"><a href="#menu-function-set-namespace-tag">←</a><a href="#top">↑</a></p><div role="params"><dl><dt><span class="var-name">namespace</span>
				: <span class="var-type">String</span>
				= <span class="var-default">''</span></dt></dl></div><p class="back-menu"><a href="#menu-function-set-namespace-tag">←</a><a href="#top">↑</a></p></section><section class="function" id="function-slice"><h1>slice</h1><p class="resume">
				Coupe le texte de la sélection ou de la ligne en morceaux de taille définie par size.
			</p><p class="back-menu"><a href="#menu-function-slice">←</a><a href="#top">↑</a></p><div role="params"><dl><dt><span class="var-name">deliminator</span>
				: <span class="var-type">String</span>
				= <span class="var-default">' '</span></dt><dd>
					chaîne qui va délimiter les morceaux
				</dd><dt><span class="var-name">size</span>
				: <span class="var-type">Number</span>
				= <span class="var-default">1</span></dt><dt><span class="var-name">…</span></dt></dl></div><div role="examples"><div class="example"><pre class="resume">abcde</pre><pre class="command"><code>slice , 1</code></pre><pre class="result">a,b,c,d,e</pre></div><div class="example"><pre class="resume">abcde</pre><pre class="command"><code>slice "', '" 1</code></pre><pre class="result">a', 'b', 'c', 'd', 'e</pre></div></div><p class="back-menu"><a href="#menu-function-slice">←</a><a href="#top">↑</a></p></section><section class="function" id="function-sort2"><h1>sort2</h1><p class="resume">
				Trie les lignes de la sélection ou l'ensemble du document.
			</p><p class="back-menu"><a href="#menu-function-sort2">←</a><a href="#top">↑</a></p><div role="params"><dl><dt><span class="var-name">step</span>
				: <span class="var-type">stepper|Boolean</span></dt><dt><span class="var-name">caseSensitive</span>
				: <span class="var-type">Boolean</span>
				= <span class="var-default">false</span></dt><dd>
					Si step n'est pas du type stepper et que caseSensitive est faux, alors caseSensitive = false
				</dd></dl></div><p class="back-menu"><a href="#menu-function-sort2">←</a><a href="#top">↑</a></p></section><section class="function" id="function-swap"><h1>swap</h1><p class="resume">
				Intervertit les 2 fragments de chaînes recupérés dans le texte sélectionné ou dans la ligne.
			</p><p class="back-menu"><a href="#menu-function-swap">←</a><a href="#top">↑</a></p><div role="params"><dl><dt><span class="var-name">deliminator</span>
				: <span class="var-type">String</span>
				= <span class="var-default">''</span></dt><dd>
					Définit la césure de la chaîne. Si la chaîne est vide la césure se fait au niveau du curseur.
				</dd><dt><span class="var-name">ignoreBackslash</span>
				: <span class="var-type">0|1|2</span>
				= <span class="var-default">1</span></dt><dd>
					Si 1, les espaces au bord de la chaîne sont ignorés. Si 2 les espaces au bord des fragments de chaînes sont ignorés.
				</dd><dt><span class="var-name">position</span>
				: <span class="var-type">Number</span>
				= <span class="var-default">1</span></dt><dd>
					Si la chaîne n'est pas vide, correspond à la position du délimiteur.
				</dd></dl></div><div role="examples"><div class="example"><pre class="resume">a = b</pre><pre class="command"><code>swap ' = '</code></pre><pre class="result">b = a</pre></div><div class="example"><pre class="resume">a = b = c</pre><pre class="command"><code>swap = 2</code></pre><pre class="result">b = c = a</pre></div><div class="example"><pre class="resume">a = b = c</pre><pre class="command"><code>swap = 2 -1</code></pre><pre class="result">c = a = b</pre></div></div><p class="back-menu"><a href="#menu-function-swap">←</a><a href="#top">↑</a></p></section><section class="function" id="function-swapCharacter"><h1>swapCharacter</h1><p class="resume">
				Ceci est une amélioration de la transposition de caractères présent par défaut. Si le curseur ce trouve en fin de ligne il intervertit les 2 derniers caractères de cette ligne. S'il ce trouve au début d'une ligne, la première lettre monde à la fin de la précédente. Et enfin, si le curseur est au début du document les 2 premiers caractère sont intervertit.
			</p><p class="action-key">Cette commande est disponible par le racourci: <span>Ctrl+Alt+T</span></p><p class="back-menu"><a href="#menu-function-swapCharacter">←</a><a href="#top">↑</a></p><p class="back-menu"><a href="#menu-function-swapCharacter">←</a><a href="#top">↑</a></p></section><section class="function" id="function-tag"><h1>tag</h1><p class="resume">
				Si aucun paramètre n'est passé transforme la sélection ou le texte en tag.
			</p><p class="action-key">Cette commande est disponible par le racourci: <span>Ctrl+Alt+N</span></p><p class="back-menu"><a href="#menu-function-tag">←</a><a href="#top">↑</a></p><div role="params"><dl><dt><span class="var-name">name</span>
				: <span class="var-type">String</span></dt><dt><span class="var-name">indent</span>
				: <span class="var-type">Boolean</span>
				= <span class="var-default">false</span></dt><dd>
					Si vrai saut de ligne + indentation.
				</dd></dl></div><p class="back-menu"><a href="#menu-function-tag">←</a><a href="#top">↑</a></p></section><section class="function" id="function-tr"><h1>tr</h1><p class="resume">
				Remplace ou supprime des caractères de la ligne ou de la sélection.
			</p><p class="back-menu"><a href="#menu-function-tr">←</a><a href="#top">↑</a></p><div role="params"><dl><dt><span class="var-name">findTo</span>
				: <span class="var-type">String</span></dt><dt><span class="var-name">replaceTo</span>
				: <span class="var-type">String</span>
				= <span class="var-default">''</span></dt><dt><span class="var-name">empty</span>
				: <span class="var-type">Boolean</span>
				= <span class="var-default">false</span></dt><dd>
					Si vrai les caractères de findTo n'ayant pas de correspondance dans replaceTo seront effacés. Si faux, il seront remplacés par le dernier caractère de replaceTo.
				</dd></dl></div><div role="examples"><div class="example"><pre class="resume">20521426563644556673853594</pre><pre class="command"><code>tr 0123456789 abcdefghij</code></pre><pre class="result">cafcbecgfgdgeeffgghdifdfje</pre></div><div class="example"><pre class="resume">a b c d</pre><pre class="command"><code>tr ' ' \\t</code></pre><pre class="result">a	b	c	d</pre></div></div><p class="back-menu"><a href="#menu-function-tr">←</a><a href="#top">↑</a></p></section><section class="function" id="function-uniq2"><h1>uniq2</h1><p class="resume">
				Supprime les lignes identiques de la sélection ou de l'ensemble du document
			</p><p class="back-menu"><a href="#menu-function-uniq2">←</a><a href="#top">↑</a></p><div role="params"><dl><dt><span class="var-name">last</span>
				: <span class="var-type">Boolean</span>
				= <span class="var-default">false</span></dt><dd>
					Si vrai alors la recherhe commence à la ligne de fin.
				</dd></dl></div><p class="back-menu"><a href="#menu-function-uniq2">←</a><a href="#top">↑</a></p></section><section class="function" id="function-unouter"><h1>unouter</h1><p class="resume">
				Supprime le texte qui entoure la sélection ou la ligne qui est identique au chaînes passées en paramètres (inverse de <a class="ref-function" href="#function-outer">outer</a>).
			</p><p class="back-menu"><a href="#menu-function-unouter">←</a><a href="#top">↑</a></p><div role="params"><dl><dt><span class="var-name">text</span>
				: <span class="var-type">String</span></dt><dt><span class="var-name">…</span></dt></dl></div><p class="back-menu"><a href="#menu-function-unouter">←</a><a href="#top">↑</a></p></section><section class="function" id="function-unouterLine"><h1>unouterLine</h1><p class="resume">
				Effectue unouter sur chaque ligne de la sélection.
			</p><p class="back-menu"><a href="#menu-function-unouterLine">←</a><a href="#top">↑</a></p><div role="params"><dl><dt><span class="var-name">text</span>
				: <span class="var-type">String</span></dt><dt><span class="var-name">…</span></dt></dl></div><p class="back-menu"><a href="#menu-function-unouterLine">←</a><a href="#top">↑</a></p></section><section class="function" id="function-unrwrap"><h1>unrwrap</h1><p class="resume">
				Supprime le texte qui entoure la sélection ou la ligne qui est identique au chaînes passées en paramètres (inverse de <a class="ref-function" href="#function-rwrap">rwrap</a>).
			</p><p class="back-menu"><a href="#menu-function-unrwrap">←</a><a href="#top">↑</a></p><div role="params"><dl><dt><span class="var-name">text</span>
				: <span class="var-type">String</span></dt><dt><span class="var-name">…</span></dt></dl></div><p class="back-menu"><a href="#menu-function-unrwrap">←</a><a href="#top">↑</a></p></section><section class="function" id="function-unrwrapLine"><h1>unrwrapLine</h1><p class="resume">
				Effectue <a class="ref-function" href="#function-unrwrap">unrwrap</a> sur chaque ligne de la sélection.
			</p><p class="back-menu"><a href="#menu-function-unrwrapLine">←</a><a href="#top">↑</a></p><div role="params"><dl><dt><span class="var-name">text</span>
				: <span class="var-type">String</span></dt><dt><span class="var-name">…</span></dt></dl></div><p class="back-menu"><a href="#menu-function-unrwrapLine">←</a><a href="#top">↑</a></p></section><section class="function" id="function-unwrap"><h1>unwrap</h1><p class="resume">
				Supprime le texte qui entoure la sélection ou la ligne qui est identique au chaînes passées en paramètres (inverse de <a class="ref-function" href="#function-wrap">wrap</a>).
			</p><p class="back-menu"><a href="#menu-function-unwrap">←</a><a href="#top">↑</a></p><div role="params"><dl><dt><span class="var-name">text</span>
				: <span class="var-type">String</span></dt><dt><span class="var-name">…</span></dt></dl></div><p class="back-menu"><a href="#menu-function-unwrap">←</a><a href="#top">↑</a></p></section><section class="function" id="function-unwrapLine"><h1>unwrapLine</h1><p class="resume">
				Effectue <a class="ref-function" href="#function-unwrap">unwrap</a> sur chaque ligne de la sélection.
			</p><p class="back-menu"><a href="#menu-function-unwrapLine">←</a><a href="#top">↑</a></p><div role="params"><dl><dt><span class="var-name">text</span>
				: <span class="var-type">String</span></dt><dt><span class="var-name">…</span></dt></dl></div><p class="back-menu"><a href="#menu-function-unwrapLine">←</a><a href="#top">↑</a></p></section><section class="function" id="function-url"><h1>url</h1><p class="resume">
				Affiche l'url du fichier.
			</p><p class="back-menu"><a href="#menu-function-url">←</a><a href="#top">↑</a></p><div role="params"><dl><dt><span class="var-name">nDir</span>
				: <span class="var-type">Number|Boolean</span></dt><dd>
					Nombre de dossiers à prendre en compte. Si Boolean, supprime le protocole de l'url.
				</dd><dt><span class="var-name">replace</span>
				: <span class="var-type">String</span>
				= <span class="var-default">undefined</span></dt><dd>
					Si définit alors chaîne qui remplace les caractères '/'
				</dd><dt><span class="var-name">noExt</span>
				: <span class="var-type">Boolean</span>
				= <span class="var-default">false</span></dt></dl></div><div role="examples"><div class="example"><pre class="resume">file:///home/poelen/Code/KatePart/doc-script/functions-descriptions.xml</pre><pre class="command"><code>url 3 _ 1</code></pre><pre class="result">KatePart_doc-script_functions-descriptions</pre></div></div><p class="back-menu"><a href="#menu-function-url">←</a><a href="#top">↑</a></p></section><section class="function" id="function-usort"><h1>usort</h1><p class="resume">
				Trie les lignes de la sélection ou l'ensemble du document via une fontion.
			</p><p class="back-menu"><a href="#menu-function-usort">←</a><a href="#top">↑</a></p><div role="params"><dl><dt><span class="var-name">body</span>
				: <span class="var-type">Strting</span></dt><dd>
					Correspond au nom d'une fonction ou d'un corps de fonction. Si body est un corps de fonction et que return n'existe pas, il est ajouté au début. 2 paramètrte sont passé à la fonction : a et b.
				</dd><dt><span class="var-name">step</span>
				: <span class="var-type">stepper|Boolean</span></dt><dt><span class="var-name">caseSensitive</span>
				: <span class="var-type">Boolean</span>
				= <span class="var-default">false</span></dt></dl></div><div role="examples"><div class="example"><pre class="resume">d
b
a
c
e</pre><pre class="command"><code>usort 'compare(a, b)'</code></pre><pre class="result">a
b
c
d
e</pre></div></div><p class="back-menu"><a href="#menu-function-usort">←</a><a href="#top">↑</a></p></section><section class="function" id="function-wrap"><h1>wrap</h1><p class="resume">
				Entoure le texte de la sélection ou de la ligne avec les chaînes passées en paramètres en remplacant les caractères [](){}&lt;&gt; par ][)(}{&gt;&lt;
			</p><p class="back-menu"><a href="#menu-function-wrap">←</a><a href="#top">↑</a></p><div role="params"><dl><dt><span class="var-name">text</span>
				: <span class="var-type">String</span></dt><dt><span class="var-name">…</span></dt></dl></div><div role="examples"><div class="example"><pre class="resume">plop</pre><pre class="command"><code>wrap a</code></pre><pre class="result">aplopa</pre></div><div class="example"><pre class="resume">plop</pre><pre class="command"><code>wrap a b c</code></pre><pre class="result">a b cplopa b c</pre></div></div><p class="back-menu"><a href="#menu-function-wrap">←</a><a href="#top">↑</a></p></section><section class="function" id="function-wrapLine"><h1>wrapLine</h1><p class="resume">
				Effectue <a class="ref-function" href="#function-wrap">wrap</a> sur chaque ligne de la sélection.
			</p><p class="back-menu"><a href="#menu-function-wrapLine">←</a><a href="#top">↑</a></p><div role="params"><dl><dt><span class="var-name">text</span>
				: <span class="var-type">String</span></dt><dt><span class="var-name">…</span></dt></dl></div><div role="examples"><div class="example"><pre class="resume">plop
plop</pre><pre class="command"><code>wrapLine :</code></pre><pre class="result">:plop:
:plop:</pre></div></div><p class="back-menu"><a href="#menu-function-wrapLine">←</a><a href="#top">↑</a></p></section></div></article><article role="main" id="function-type-util"><header><h1>Function type : util</h1></header><nav><ul><li id="menu-function-compare"><a href="#function-compare"><span class="function-name">compare</span><span>(<span class="var-name">a</span>
				: <span class="var-type">Object</span>, <span class="var-name">b</span>
				: <span class="var-type">Object</span>)</span></a></li><li id="menu-function-each"><a href="#function-each"><span class="function-name">each</span><span>(<span class="var-name">func</span>
				: <span class="var-type">Function</span>)</span></a></li><li id="menu-function-edit"><a href="#function-edit"><span class="function-name">edit</span><span>(<span class="var-name">fn</span>
				: <span class="var-type">Function</span>)</span></a></li><li id="menu-function-extend"><a href="#function-extend"><span class="function-name">extend</span><span>(<span class="var-name">o</span>
				: <span class="var-type">Object</span>, <span class="var-name">…</span>)</span></a></li><li id="menu-function-getCommandOrThrowError"><a href="#function-getCommandOrThrowError"><span class="function-name">getCommandOrThrowError</span><span>(<span class="var-name">name</span>
				: <span class="var-type">String</span>)</span></a></li><li id="menu-function-getCursorEndText"><a href="#function-getCursorEndText"><span class="function-name">getCursorEndText</span><span>(<span class="var-name">text</span>
				: <span class="var-type">String</span>, <span class="var-name">cursor</span>
				: <span class="var-type">Cursor</span>
				= <span class="var-default">view.cursorPosition()</span>)</span></a></li><li id="menu-function-getRangeText"><a href="#function-getRangeText"><span class="function-name">getRangeText</span><span>(<span class="var-name">text</span>
				: <span class="var-type">String</span>, <span class="var-name">cursor</span>
				: <span class="var-type">Cursor</span>
				= <span class="var-default">view.cursorPosition()</span>)</span></a></li><li id="menu-function-getSelectionAll"><a href="#function-getSelectionAll"><span class="function-name">getSelectionAll</span><span>()</span></a></li><li id="menu-function-getSelectionBloc"><a href="#function-getSelectionBloc"><span class="function-name">getSelectionBloc</span><span>(<span class="var-name">selection</span>
				: <span class="var-type">Range</span>
				= <span class="var-default">view.selection()</span>, <span class="var-name">nonWhitespace</span>
				: <span class="var-type">Boolean</span>)</span></a></li><li id="menu-function-getSelectionCountLines"><a href="#function-getSelectionCountLines"><span class="function-name">getSelectionCountLines</span><span>(<span class="var-name">begin</span>
				: <span class="var-type">Number</span>, <span class="var-name">count</span>
				: <span class="var-type">Number</span>)</span></a></li><li id="menu-function-getSelectionLine"><a href="#function-getSelectionLine"><span class="function-name">getSelectionLine</span><span>(<span class="var-name">line</span>
				: <span class="var-type">Number</span>)</span></a></li><li id="menu-function-getSelectionLines"><a href="#function-getSelectionLines"><span class="function-name">getSelectionLines</span><span>(<span class="var-name">begin</span>
				: <span class="var-type">Number</span>, <span class="var-name">end</span>
				: <span class="var-type">Number</span>)</span></a></li><li id="menu-function-insertText"><a href="#function-insertText"><span class="function-name">insertText</span><span>(<span class="var-name">text</span>
				: <span class="var-type">String</span>)</span></a></li><li id="menu-function-insertTextAndSelects"><a href="#function-insertTextAndSelects"><span class="function-name">insertTextAndSelects</span><span>(<span class="var-name">text</span>
				: <span class="var-type">String</span>, <span class="var-name">cursor</span>
				: <span class="var-type">Cursor</span>
				= <span class="var-default">view.cursorPosition()</span>)</span></a></li><li id="menu-function-isDigitChar"><a href="#function-isDigitChar"><span class="function-name">isDigitChar</span><span>(<span class="var-name">c</span>
				: <span class="var-type">String</span>)</span></a></li><li id="menu-function-isDigitChar"><a href="#function-isDigitChar"><span class="function-name">isDigitChar</span><span>(<span class="var-name">s</span>
				: <span class="var-type">String</span>)</span></a></li><li id="menu-function-isWhitespaceChar"><a href="#function-isWhitespaceChar"><span class="function-name">isWhitespaceChar</span><span>(<span class="var-name">c</span>
				: <span class="var-type">String</span>)</span></a></li><li id="menu-function-log"><a href="#function-log"><span class="function-name">log</span><span>(<span class="var-name">…</span>
				: <span class="var-type">Object</span>)</span></a></li><li id="menu-function-natcompare"><a href="#function-natcompare"><span class="function-name">natcompare</span><span>(<span class="var-name">a</span>
				: <span class="var-type">String</span>, <span class="var-name">b</span>
				: <span class="var-type">String</span>)</span></a></li><li id="menu-function-negate"><a href="#function-negate"><span class="function-name">negate</span><span>(<span class="var-name">fn</span>
				: <span class="var-type">Function</span>, <span class="var-name">thisp</span>
				: <span class="var-type">Object</span>)</span></a></li><li id="menu-function-rangeLength"><a href="#function-rangeLength"><span class="function-name">rangeLength</span><span>(<span class="var-name">start</span>
				: <span class="var-type">Range|Cursor</span>, <span class="var-name">end</span>
				: <span class="var-type">Cursor</span>
				= <span class="var-default">start.end</span>)</span></a></li><li id="menu-function-rangeLength"><a href="#function-rangeLength"><span class="function-name">rangeLength</span><span>(<span class="var-name">start</span>
				: <span class="var-type">Range|Cursor</span>, <span class="var-name">end</span>
				: <span class="var-type">Cursor|start.end</span>)</span></a></li><li id="menu-function-removeLineThenInsertLine"><a href="#function-removeLineThenInsertLine"><span class="function-name">removeLineThenInsertLine</span><span>(<span class="var-name">line</span>
				: <span class="var-type">Number</span>, <span class="var-name">text</span>
				: <span class="var-type">String</span>, <span class="var-name">noEdit</span>
				: <span class="var-type">Boolean</span>
				= <span class="var-default">false</span>)</span></a></li><li id="menu-function-removeRangeThenInsertText"><a href="#function-removeRangeThenInsertText"><span class="function-name">removeRangeThenInsertText</span><span>(<span class="var-name">selection</span>
				: <span class="var-type">Range</span>, <span class="var-name">text</span>
				: <span class="var-type">String</span>, <span class="var-name">noEdit</span>
				: <span class="var-type">Boolean</span>
				= <span class="var-default">false</span>)</span></a></li><li id="menu-function-removeThenInsert"><a href="#function-removeThenInsert"><span class="function-name">removeThenInsert</span><span>(<span class="var-name">fnRemove</span>
				: <span class="var-type">Function</span>, <span class="var-name">fnInsert</span>
				: <span class="var-type">Function</span>, <span class="var-name">param1Remove</span>
				: <span class="var-type">mixed</span>, <span class="var-name">param1Insert</span>
				: <span class="var-type">mixed</span>, <span class="var-name">str</span>
				: <span class="var-type">String</span>, <span class="var-name">noEdit</span>
				: <span class="var-type">Boolean</span>
				= <span class="var-default">false</span>)</span></a></li><li id="menu-function-selectionNonWhitespace"><a href="#function-selectionNonWhitespace"><span class="function-name">selectionNonWhitespace</span><span>(<span class="var-name">selection</span>
				: <span class="var-type">Range</span>
				= <span class="var-default">view.selection()</span>)</span></a></li><li id="menu-function-selectionOrLine"><a href="#function-selectionOrLine"><span class="function-name">selectionOrLine</span><span>(<span class="var-name">lf</span>
				: <span class="var-type">undefined|Boolean</span>
				= <span class="var-default">undefined</span>, <span class="var-name">removeText</span>
				: <span class="var-type">Boolean</span>
				= <span class="var-default">false</span>)</span></a></li><li id="menu-function-setSelection"><a href="#function-setSelection"><span class="function-name">setSelection</span><span>(<span class="var-name">selection</span>
				: <span class="var-type">Range</span>, <span class="var-name">cursor</span>
				: <span class="var-type">Cursor|view.cursorPosition()</span>)</span></a></li><li id="menu-function-simpleLeftAlgorithme"><a href="#function-simpleLeftAlgorithme"><span class="function-name">simpleLeftAlgorithme</span><span>(<span class="var-name">fn</span>
				: <span class="var-type">Function</span>, <span class="var-name">args</span>
				: <span class="var-type">Array</span>)</span></a></li><li id="menu-function-stepper"><a href="#function-stepper"><span class="function-name">stepper</span><span>(<span class="var-name">step</span>
				: <span class="var-type">String</span>)</span></a></li><li id="menu-function-Stepper"><a href="#function-Stepper"><span class="function-name">Stepper</span><span>(<span class="var-name">s</span>
				: <span class="var-type">String</span>
				= <span class="var-default">0~1</span>)</span></a></li><li id="menu-function-StopEach"><a href="#function-StopEach"><span class="function-name">StopEach</span><span>()</span></a></li><li id="menu-function-StopEachLine"><a href="#function-StopEachLine"><span class="function-name">StopEachLine</span><span>()</span></a></li><li id="menu-function-text"><a href="#function-text"><span class="function-name">text</span><span>(<span class="var-name">args</span>
				: <span class="var-type">Array|arguments</span>, <span class="var-name">func</span>
				: <span class="var-type">Function</span>, <span class="var-name">removeSelection</span>
				: <span class="var-type">Boolean</span>
				= <span class="var-default">false</span>)</span></a></li><li id="menu-function-toBoolean"><a href="#function-toBoolean"><span class="function-name">toBoolean</span><span>(<span class="var-name">v</span>
				: <span class="var-type">mixed</span>
				= <span class="var-default">undefined</span>)</span></a></li></ul></nav><div class="functions"><section class="function" id="function-compare"><h1>compare</h1><p class="resume">
				a === b ? 0 : a &lt; b ? -1 : 1
			</p><p class="back-menu"><a href="#menu-function-compare">←</a><a href="#top">↑</a></p><div role="params"><dl><dt><span class="var-name">a</span>
				: <span class="var-type">Object</span></dt><dt><span class="var-name">b</span>
				: <span class="var-type">Object</span></dt></dl></div><div role="return"><p>-1|0|1</p></div><p class="back-menu"><a href="#menu-function-compare">←</a><a href="#top">↑</a></p></section><section class="function" id="function-each"><h1>each</h1><p class="resume">
				Exécute func sur un tableau de lignes défait de leur "\n"
			</p><p class="back-menu"><a href="#menu-function-each">←</a><a href="#top">↑</a></p><div role="params"><dl><dt><span class="var-name">func</span>
				: <span class="var-type">Function</span></dt></dl></div><p class="back-menu"><a href="#menu-function-each">←</a><a href="#top">↑</a></p></section><section class="function" id="function-edit"><h1>edit</h1><p class="resume">
				Modifie le document (document.editBegin + document.editEnd).
			</p><p class="back-menu"><a href="#menu-function-edit">←</a><a href="#top">↑</a></p><div role="params"><dl><dt><span class="var-name">fn</span>
				: <span class="var-type">Function</span></dt><dd>
					Si fn lance une exception, document.editEnd et exécuté et l'exception est relancée.
				</dd></dl></div><p class="back-menu"><a href="#menu-function-edit">←</a><a href="#top">↑</a></p></section><section class="function" id="function-extend"><h1>extend</h1><p class="resume">
				Copie les attributs des object passés en paramètre 2 et plus dans le 1er paramètre, puis le retourne.
			</p><p class="back-menu"><a href="#menu-function-extend">←</a><a href="#top">↑</a></p><div role="params"><dl><dt><span class="var-name">o</span>
				: <span class="var-type">Object</span></dt><dt><span class="var-name">…</span></dt></dl></div><div role="return"><p>Object</p></div><p class="back-menu"><a href="#menu-function-extend">←</a><a href="#top">↑</a></p></section><section class="function" id="function-getCommandOrThrowError"><h1>getCommandOrThrowError</h1><p class="resume">
				Retourne la commande du nom de name. La commande est cherchée dans le scope global puis dans le tableau de fonction créé par alias et createFunction. Si non trouvé la command est splitée avec comme séparateur '.' et la recherche se fait comme ceci global[split[0]][split[1]]. Si aucune commande n'est trouvée, alors affiche un message avec debug et une exception ReferenceError est lancée.
			</p><p class="back-menu"><a href="#menu-function-getCommandOrThrowError">←</a><a href="#top">↑</a></p><div role="params"><dl><dt><span class="var-name">name</span>
				: <span class="var-type">String</span></dt></dl></div><div role="return"><p>Function</p></div><p class="back-menu"><a href="#menu-function-getCommandOrThrowError">←</a><a href="#top">↑</a></p></section><section class="function" id="function-getCursorEndText"><h1>getCursorEndText</h1><p class="resume">
				Donne la position du cursor de fin de la chaîne si elle était insérée.
			</p><p class="back-menu"><a href="#menu-function-getCursorEndText">←</a><a href="#top">↑</a></p><div role="params"><dl><dt><span class="var-name">text</span>
				: <span class="var-type">String</span></dt><dt><span class="var-name">cursor</span>
				: <span class="var-type">Cursor</span>
				= <span class="var-default">view.cursorPosition()</span></dt></dl></div><div role="return"><p>Cursor</p></div><p class="back-menu"><a href="#menu-function-getCursorEndText">←</a><a href="#top">↑</a></p></section><section class="function" id="function-getRangeText"><h1>getRangeText</h1><p class="resume">
				Donne le range de la chaîne si celle-ci était sélectionnée.
			</p><p class="back-menu"><a href="#menu-function-getRangeText">←</a><a href="#top">↑</a></p><div role="params"><dl><dt><span class="var-name">text</span>
				: <span class="var-type">String</span></dt><dt><span class="var-name">cursor</span>
				: <span class="var-type">Cursor</span>
				= <span class="var-default">view.cursorPosition()</span></dt></dl></div><div role="return"><p>Range</p></div><p class="back-menu"><a href="#menu-function-getRangeText">←</a><a href="#top">↑</a></p></section><section class="function" id="function-getSelectionAll"><h1>getSelectionAll</h1><p class="resume">
				Retourne une sélection de l'ensemble document.
			</p><p class="back-menu"><a href="#menu-function-getSelectionAll">←</a><a href="#top">↑</a></p><div role="return"><p/></div><p class="back-menu"><a href="#menu-function-getSelectionAll">←</a><a href="#top">↑</a></p></section><section class="function" id="function-getSelectionBloc"><h1>getSelectionBloc</h1><p class="resume">
				Retourne une sélection du début de la ligne de sélection à la fin de la ligne de la sélection. Si aucune sélection, retourne documentRange.
			</p><p class="back-menu"><a href="#menu-function-getSelectionBloc">←</a><a href="#top">↑</a></p><div role="params"><dl><dt><span class="var-name">selection</span>
				: <span class="var-type">Range</span>
				= <span class="var-default">view.selection()</span></dt><dt><span class="var-name">nonWhitespace</span>
				: <span class="var-type">Boolean</span></dt></dl></div><div role="return"><p/></div><p class="back-menu"><a href="#menu-function-getSelectionBloc">←</a><a href="#top">↑</a></p></section><section class="function" id="function-getSelectionCountLines"><h1>getSelectionCountLines</h1><p class="resume">
				Retourne une sélection de begin à begin + count.
			</p><p class="back-menu"><a href="#menu-function-getSelectionCountLines">←</a><a href="#top">↑</a></p><div role="params"><dl><dt><span class="var-name">begin</span>
				: <span class="var-type">Number</span></dt><dt><span class="var-name">count</span>
				: <span class="var-type">Number</span></dt></dl></div><div role="return"><p/></div><p class="back-menu"><a href="#menu-function-getSelectionCountLines">←</a><a href="#top">↑</a></p></section><section class="function" id="function-getSelectionLine"><h1>getSelectionLine</h1><p class="resume">
				Retourne une sélection de la ligne.
			</p><p class="back-menu"><a href="#menu-function-getSelectionLine">←</a><a href="#top">↑</a></p><div role="params"><dl><dt><span class="var-name">line</span>
				: <span class="var-type">Number</span></dt></dl></div><div role="return"><p/></div><p class="back-menu"><a href="#menu-function-getSelectionLine">←</a><a href="#top">↑</a></p></section><section class="function" id="function-getSelectionLines"><h1>getSelectionLines</h1><p class="resume">
				Retourne une sélection de begin à end.
			</p><p class="back-menu"><a href="#menu-function-getSelectionLines">←</a><a href="#top">↑</a></p><div role="params"><dl><dt><span class="var-name">begin</span>
				: <span class="var-type">Number</span></dt><dt><span class="var-name">end</span>
				: <span class="var-type">Number</span></dt></dl></div><div role="return"><p/></div><p class="back-menu"><a href="#menu-function-getSelectionLines">←</a><a href="#top">↑</a></p></section><section class="function" id="function-insertText"><h1>insertText</h1><p class="resume">
				Insert text la position du curseur.
			</p><p class="back-menu"><a href="#menu-function-insertText">←</a><a href="#top">↑</a></p><div role="params"><dl><dt><span class="var-name">text</span>
				: <span class="var-type">String</span></dt></dl></div><p class="back-menu"><a href="#menu-function-insertText">←</a><a href="#top">↑</a></p></section><section class="function" id="function-insertTextAndSelects"><h1>insertTextAndSelects</h1><p class="resume">
				Insert text la position du curseur.
			
				Puis le sélectionne.
			</p><p class="back-menu"><a href="#menu-function-insertTextAndSelects">←</a><a href="#top">↑</a></p><div role="params"><dl><dt><span class="var-name">text</span>
				: <span class="var-type">String</span></dt><dt><span class="var-name">cursor</span>
				: <span class="var-type">Cursor</span>
				= <span class="var-default">view.cursorPosition()</span></dt></dl></div><p class="back-menu"><a href="#menu-function-insertTextAndSelects">←</a><a href="#top">↑</a></p></section><section class="function" id="function-isDigitChar"><h1>isDigitChar</h1><p class="resume">
				Retourne true si c est un chiffre
			</p><p class="back-menu"><a href="#menu-function-isDigitChar">←</a><a href="#top">↑</a></p><div role="params"><dl><dt><span class="var-name">c</span>
				: <span class="var-type">String</span></dt></dl></div><div role="return"><p>Boolean</p></div><p class="back-menu"><a href="#menu-function-isDigitChar">←</a><a href="#top">↑</a></p></section><section class="function" id="function-isDigitChar"><h1>isDigitChar</h1><p class="resume">
				Retourne true si le 1er caractère est un entier (0 à 9)
			</p><p class="back-menu"><a href="#menu-function-isDigitChar">←</a><a href="#top">↑</a></p><div role="params"><dl><dt><span class="var-name">s</span>
				: <span class="var-type">String</span></dt></dl></div><div role="return"><p>Boolean</p></div><p class="back-menu"><a href="#menu-function-isDigitChar">←</a><a href="#top">↑</a></p></section><section class="function" id="function-isWhitespaceChar"><h1>isWhitespaceChar</h1><p class="resume">
				Retourne true si le char code de c est inférieur à 32
			</p><p class="back-menu"><a href="#menu-function-isWhitespaceChar">←</a><a href="#top">↑</a></p><div role="params"><dl><dt><span class="var-name">c</span>
				: <span class="var-type">String</span></dt></dl></div><div role="return"><p>Boolean</p></div><p class="back-menu"><a href="#menu-function-isWhitespaceChar">←</a><a href="#top">↑</a></p></section><section class="function" id="function-log"><h1>log</h1><p class="resume">
				Écrit les arguments passés en paramètres dans le document à la position du curseur. Chaque paramètre est séparé par une virgule et un saut de ligne est ajouté après le dernier paramètre.
			</p><p class="back-menu"><a href="#menu-function-log">←</a><a href="#top">↑</a></p><div role="params"><dl><dt><span class="var-name">…</span>
				: <span class="var-type">Object</span></dt></dl></div><p class="back-menu"><a href="#menu-function-log">←</a><a href="#top">↑</a></p></section><section class="function" id="function-natcompare"><h1>natcompare</h1><p class="resume">
				Comparaison par ordre naturel.
			</p><p class="back-menu"><a href="#menu-function-natcompare">←</a><a href="#top">↑</a></p><div role="params"><dl><dt><span class="var-name">a</span>
				: <span class="var-type">String</span></dt><dt><span class="var-name">b</span>
				: <span class="var-type">String</span></dt></dl></div><div role="return"><p>-1|0|1</p></div><p class="back-menu"><a href="#menu-function-natcompare">←</a><a href="#top">↑</a></p></section><section class="function" id="function-negate"><h1>negate</h1><p class="resume">
				Retourne un négatif de la fonction passée en paramètre
			</p><p class="back-menu"><a href="#menu-function-negate">←</a><a href="#top">↑</a></p><div role="params"><dl><dt><span class="var-name">fn</span>
				: <span class="var-type">Function</span></dt><dt><span class="var-name">thisp</span>
				: <span class="var-type">Object</span></dt></dl></div><div role="return"><p>Function</p></div><p class="back-menu"><a href="#menu-function-negate">←</a><a href="#top">↑</a></p></section><section class="function" id="function-rangeLength"><h1>rangeLength</h1><p class="resume">
				Retourne le nombre de caractère que prend la sélection dans le document.
			</p><p class="back-menu"><a href="#menu-function-rangeLength">←</a><a href="#top">↑</a></p><div role="params"><dl><dt><span class="var-name">start</span>
				: <span class="var-type">Range|Cursor</span></dt><dt><span class="var-name">end</span>
				: <span class="var-type">Cursor</span>
				= <span class="var-default">start.end</span></dt></dl></div><div role="return"><p>Number</p></div><p class="back-menu"><a href="#menu-function-rangeLength">←</a><a href="#top">↑</a></p></section><section class="function" id="function-rangeLength"><h1>rangeLength</h1><p class="resume">
				Retourne le nombre de caractères dans la sélection.
			</p><p class="back-menu"><a href="#menu-function-rangeLength">←</a><a href="#top">↑</a></p><div role="params"><dl><dt><span class="var-name">start</span>
				: <span class="var-type">Range|Cursor</span></dt><dt><span class="var-name">end</span>
				: <span class="var-type">Cursor|start.end</span></dt></dl></div><div role="return"><p>Number</p></div><p class="back-menu"><a href="#menu-function-rangeLength">←</a><a href="#top">↑</a></p></section><section class="function" id="function-removeLineThenInsertLine"><h1>removeLineThenInsertLine</h1><p class="resume">
				Remplace la ligne par text.
			</p><p class="back-menu"><a href="#menu-function-removeLineThenInsertLine">←</a><a href="#top">↑</a></p><div role="params"><dl><dt><span class="var-name">line</span>
				: <span class="var-type">Number</span></dt><dt><span class="var-name">text</span>
				: <span class="var-type">String</span></dt><dt><span class="var-name">noEdit</span>
				: <span class="var-type">Boolean</span>
				= <span class="var-default">false</span></dt></dl></div><p class="back-menu"><a href="#menu-function-removeLineThenInsertLine">←</a><a href="#top">↑</a></p></section><section class="function" id="function-removeRangeThenInsertText"><h1>removeRangeThenInsertText</h1><p class="resume">
				Remplace la sélection par text.
			</p><p class="back-menu"><a href="#menu-function-removeRangeThenInsertText">←</a><a href="#top">↑</a></p><div role="params"><dl><dt><span class="var-name">selection</span>
				: <span class="var-type">Range</span></dt><dt><span class="var-name">text</span>
				: <span class="var-type">String</span></dt><dt><span class="var-name">noEdit</span>
				: <span class="var-type">Boolean</span>
				= <span class="var-default">false</span></dt></dl></div><p class="back-menu"><a href="#menu-function-removeRangeThenInsertText">←</a><a href="#top">↑</a></p></section><section class="function" id="function-removeThenInsert"><h1>removeThenInsert</h1><p class="resume">
				Supprime puis insère du texte.
			</p><p class="back-menu"><a href="#menu-function-removeThenInsert">←</a><a href="#top">↑</a></p><div role="params"><dl><dt><span class="var-name">fnRemove</span>
				: <span class="var-type">Function</span></dt><dd>
					Fonction de suppression.
				</dd><dt><span class="var-name">fnInsert</span>
				: <span class="var-type">Function</span></dt><dd>
					Fonction d'insertion.
				</dd><dt><span class="var-name">param1Remove</span>
				: <span class="var-type">mixed</span></dt><dd>
					Paramètre pour la fonction de suppression.
				</dd><dt><span class="var-name">param1Insert</span>
				: <span class="var-type">mixed</span></dt><dd>
					Paramètre pour la fonction d'insertion.
				</dd><dt><span class="var-name">str</span>
				: <span class="var-type">String</span></dt><dd>
					Deuxième paramètre pour la fonction d'insertion.
				</dd><dt><span class="var-name">noEdit</span>
				: <span class="var-type">Boolean</span>
				= <span class="var-default">false</span></dt><dd>
					Si false document.editBegin + document.editEnd seront utilisés.
				</dd></dl></div><p class="back-menu"><a href="#menu-function-removeThenInsert">←</a><a href="#top">↑</a></p></section><section class="function" id="function-selectionNonWhitespace"><h1>selectionNonWhitespace</h1><p class="resume">
				Sélectionne le texte en éliminant les espaces en début et fin de ligne.
			</p><p class="back-menu"><a href="#menu-function-selectionNonWhitespace">←</a><a href="#top">↑</a></p><div role="params"><dl><dt><span class="var-name">selection</span>
				: <span class="var-type">Range</span>
				= <span class="var-default">view.selection()</span></dt></dl></div><div role="return"><p/></div><p class="back-menu"><a href="#menu-function-selectionNonWhitespace">←</a><a href="#top">↑</a></p></section><section class="function" id="function-selectionOrLine"><h1>selectionOrLine</h1><p class="resume">
				Retourne un objet Range de la sélection ou représentant la ligne.
			</p><p class="back-menu"><a href="#menu-function-selectionOrLine">←</a><a href="#top">↑</a></p><div role="params"><dl><dt><span class="var-name">lf</span>
				: <span class="var-type">undefined|Boolean</span>
				= <span class="var-default">undefined</span></dt><dd>
					Si lf != undefined alors un objet {range:Range, text:String} est retourné. Si lf = true et qu'il n'y a pas de sélection, alors \n est ajouté au texte.
				</dd><dt><span class="var-name">removeText</span>
				: <span class="var-type">Boolean</span>
				= <span class="var-default">false</span></dt></dl></div><div role="return"><p>{range:Range, text:String}|Range</p></div><p class="back-menu"><a href="#menu-function-selectionOrLine">←</a><a href="#top">↑</a></p></section><section class="function" id="function-setSelection"><h1>setSelection</h1><p class="resume">
				Retourne une sélection du début de la ligne à la fin de la ligne.
			</p><p class="back-menu"><a href="#menu-function-setSelection">←</a><a href="#top">↑</a></p><div role="params"><dl><dt><span class="var-name">selection</span>
				: <span class="var-type">Range</span></dt><dt><span class="var-name">cursor</span>
				: <span class="var-type">Cursor|view.cursorPosition()</span></dt></dl></div><div role="return"><p>Range</p></div><p class="back-menu"><a href="#menu-function-setSelection">←</a><a href="#top">↑</a></p></section><section class="function" id="function-simpleLeftAlgorithme"><h1>simpleLeftAlgorithme</h1><p class="resume">
				Lance fn avec args en premier paramètre, une fonction qui va sauvegarder le nombre de column en second et une fonction qui réajuste la colonne vers la droite.
			</p><p class="back-menu"><a href="#menu-function-simpleLeftAlgorithme">←</a><a href="#top">↑</a></p><div role="params"><dl><dt><span class="var-name">fn</span>
				: <span class="var-type">Function</span></dt><dt><span class="var-name">args</span>
				: <span class="var-type">Array</span></dt></dl></div><p class="back-menu"><a href="#menu-function-simpleLeftAlgorithme">←</a><a href="#top">↑</a></p></section><section class="function" id="function-stepper"><h1>stepper</h1><p class="resume"/><p class="back-menu"><a href="#menu-function-stepper">←</a><a href="#top">↑</a></p><div role="params"><dl><dt><span class="var-name">step</span>
				: <span class="var-type">String</span></dt><dd>
					$first~$modulo
				</dd></dl></div><div role="return"><p>{first:Number, modulo:Number}|null</p></div><p class="back-menu"><a href="#menu-function-stepper">←</a><a href="#top">↑</a></p></section><section class="function" id="function-Stepper"><h1>Stepper</h1><p class="resume">
				Type de paramètre utilisé par certaines fonctions.
			</p><p class="back-menu"><a href="#menu-function-Stepper">←</a><a href="#top">↑</a></p><div role="params"><dl><dt><span class="var-name">s</span>
				: <span class="var-type">String</span>
				= <span class="var-default">0~1</span></dt><dd>
					forme : [[[$first]~$step]$option]$n. $first = 0, $step = 1, $n = document.lines()-1
				</dd></dl></div><div role="return"><p>{isNegative :Function:Boolean, value :Number, step: Number, onStep :Function(n:Number):Boolean, valid :Function:Boolean, next :Function:Number, options :Function(null|Array|String):Array|Boolean}</p></div><p class="back-menu"><a href="#menu-function-Stepper">←</a><a href="#top">↑</a></p></section><section class="function" id="function-StopEach"><h1>StopEach</h1><p class="resume">
				Fonction qui ne fait rien.
			</p><p class="back-menu"><a href="#menu-function-StopEach">←</a><a href="#top">↑</a></p><p class="back-menu"><a href="#menu-function-StopEach">←</a><a href="#top">↑</a></p></section><section class="function" id="function-StopEachLine"><h1>StopEachLine</h1><p class="resume">
				Fonction qui ne fait rien.
			</p><p class="back-menu"><a href="#menu-function-StopEachLine">←</a><a href="#top">↑</a></p><p class="back-menu"><a href="#menu-function-StopEachLine">←</a><a href="#top">↑</a></p></section><section class="function" id="function-text"><h1>text</h1><p class="resume">
				Ajoute s'il existe le texte de la sélection en 1er paramètre à la fonction.
			</p><p class="back-menu"><a href="#menu-function-text">←</a><a href="#top">↑</a></p><div role="params"><dl><dt><span class="var-name">args</span>
				: <span class="var-type">Array|arguments</span></dt><dt><span class="var-name">func</span>
				: <span class="var-type">Function</span></dt><dt><span class="var-name">removeSelection</span>
				: <span class="var-type">Boolean</span>
				= <span class="var-default">false</span></dt></dl></div><p class="back-menu"><a href="#menu-function-text">←</a><a href="#top">↑</a></p></section><section class="function" id="function-toBoolean"><h1>toBoolean</h1><p class="resume">
				true si un nombre différent de 0 et NaN, true, "yes" ou "true". Dans les autres cas la valeur est false.
			</p><p class="back-menu"><a href="#menu-function-toBoolean">←</a><a href="#top">↑</a></p><div role="params"><dl><dt><span class="var-name">v</span>
				: <span class="var-type">mixed</span>
				= <span class="var-default">undefined</span></dt></dl></div><div role="examples"><div class="example"><pre class="command"><code>"plop".toBoolean()</code></pre><pre class="result">false</pre></div><div class="example"><pre class="command"><code>"yes".toBoolean()</code></pre><pre class="result">true</pre></div><div class="example"><pre class="command"><code>toBoolean("y")</code></pre><pre class="result">true</pre></div></div><div role="return"><p>Boolean</p></div><p class="back-menu"><a href="#menu-function-toBoolean">←</a><a href="#top">↑</a></p></section></div></article><article role="main" id="function-type-Object extend"><header><h1>Function type : Object extend</h1></header><nav><ul><li id="menu-function-Array.concatEnd"><a href="#function-Array.concatEnd"><span class="function-name">Array.concatEnd</span><span>(<span class="var-name">a</span>
				: <span class="var-type">Array</span>, <span class="var-name">o</span>
				: <span class="var-type">Object</span>)</span></a></li><li id="menu-function-Array.join"><a href="#function-Array.join"><span class="function-name">Array.join</span><span>()</span></a></li><li id="menu-function-Array.linear"><a href="#function-Array.linear"><span class="function-name">Array.linear</span><span>(<span class="var-name">array</span>
				: <span class="var-type">Array</span>, <span class="var-name">accu</span>
				: <span class="var-type">Array|undefined</span>)</span></a></li><li id="menu-function-Array.make"><a href="#function-Array.make"><span class="function-name">Array.make</span><span>(<span class="var-name">array</span>
				: <span class="var-type">Array</span>, <span class="var-name">range</span>
				: <span class="var-type">Array|Number</span>, <span class="var-name">array</span>
				: <span class="var-type">Array</span>, <span class="var-name">fn</span>
				: <span class="var-type">Function</span>, <span class="var-name">thisp</span>
				: <span class="var-type">Object</span>)</span></a></li><li id="menu-function-Array.map"><a href="#function-Array.map"><span class="function-name">Array.map</span><span>()</span></a></li><li id="menu-function-Array.reduce"><a href="#function-Array.reduce"><span class="function-name">Array.reduce</span><span>()</span></a></li><li id="menu-function-Array.slice"><a href="#function-Array.slice"><span class="function-name">Array.slice</span><span>()</span></a></li><li id="menu-function-Array.uniq"><a href="#function-Array.uniq"><span class="function-name">Array.uniq</span><span>(<span class="var-name">array</span>
				: <span class="var-type">Array</span>)</span></a></li><li id="menu-function-Boolean.prototype.toBoolean"><a href="#function-Boolean.prototype.toBoolean"><span class="function-name">Boolean.prototype.toBoolean</span><span>()</span></a></li><li id="menu-function-Boolean.prototype.toBoolean"><a href="#function-Boolean.prototype.toBoolean"><span class="function-name">Boolean.prototype.toBoolean</span><span>()</span></a></li><li id="menu-function-forEach"><a href="#function-forEach"><span class="function-name">forEach</span><span>(<span class="var-name">object</span>
				: <span class="var-type">Object</span>, <span class="var-name">callback</span>
				: <span class="var-type">Function</span>, <span class="var-name">thisp</span>
				: <span class="var-type">Object</span>)</span></a></li><li id="menu-function-Number.prototype.toBoolean"><a href="#function-Number.prototype.toBoolean"><span class="function-name">Number.prototype.toBoolean</span><span>()</span></a></li><li id="menu-function-Object.firstValue"><a href="#function-Object.firstValue"><span class="function-name">Object.firstValue</span><span>(<span class="var-name">object</span>
				: <span class="var-type">Object</span>)</span></a></li><li id="menu-function-String.prototype.allIndexOf"><a href="#function-String.prototype.allIndexOf"><span class="function-name">String.prototype.allIndexOf</span><span>(<span class="var-name">str</span>
				: <span class="var-type">String</span>)</span></a></li><li id="menu-function-String.prototype.countLine"><a href="#function-String.prototype.countLine"><span class="function-name">String.prototype.countLine</span><span>()</span></a></li><li id="menu-function-String.prototype.firstIndexNonSpace"><a href="#function-String.prototype.firstIndexNonSpace"><span class="function-name">String.prototype.firstIndexNonSpace</span><span>()</span></a></li><li id="menu-function-String.prototype.firstSpace"><a href="#function-String.prototype.firstSpace"><span class="function-name">String.prototype.firstSpace</span><span>()</span></a></li><li id="menu-function-String.prototype.interpret"><a href="#function-String.prototype.interpret"><span class="function-name">String.prototype.interpret</span><span>()</span></a></li><li id="menu-function-String.prototype.lastIndexNonSpace"><a href="#function-String.prototype.lastIndexNonSpace"><span class="function-name">String.prototype.lastIndexNonSpace</span><span>()</span></a></li><li id="menu-function-String.prototype.lastSpace"><a href="#function-String.prototype.lastSpace"><span class="function-name">String.prototype.lastSpace</span><span>()</span></a></li><li id="menu-function-String.prototype.ltrim"><a href="#function-String.prototype.ltrim"><span class="function-name">String.prototype.ltrim</span><span>()</span></a></li><li id="menu-function-String.prototype.repeat"><a href="#function-String.prototype.repeat"><span class="function-name">String.prototype.repeat</span><span>(<span class="var-name">n</span>
				: <span class="var-type">Number</span>)</span></a></li><li id="menu-function-String.prototype.reverse"><a href="#function-String.prototype.reverse"><span class="function-name">String.prototype.reverse</span><span>()</span></a></li><li id="menu-function-String.prototype.rtrim"><a href="#function-String.prototype.rtrim"><span class="function-name">String.prototype.rtrim</span><span>()</span></a></li><li id="menu-function-String.prototype.toBoolean"><a href="#function-String.prototype.toBoolean"><span class="function-name">String.prototype.toBoolean</span><span>()</span></a></li><li id="menu-function-String.prototype.trim"><a href="#function-String.prototype.trim"><span class="function-name">String.prototype.trim</span><span>()</span></a></li><li id="menu-function-String.yesWords"><a href="#function-String.yesWords"><span class="function-name">String.yesWords</span><span>()</span></a></li></ul></nav><div class="functions"><section class="function" id="function-Array.concatEnd"><h1>Array.concatEnd</h1><p class="resume">
				Ajoute o à la fin de a. Retourne l'index.
			</p><p class="back-menu"><a href="#menu-function-Array.concatEnd">←</a><a href="#top">↑</a></p><div role="params"><dl><dt><span class="var-name">a</span>
				: <span class="var-type">Array</span></dt><dt><span class="var-name">o</span>
				: <span class="var-type">Object</span></dt></dl></div><div role="return"><p>Number</p></div><p class="back-menu"><a href="#menu-function-Array.concatEnd">←</a><a href="#top">↑</a></p></section><section class="function" id="function-Array.join"><h1>Array.join</h1><p class="resume">Array.prototype.join</p><p class="back-menu"><a href="#menu-function-Array.join">←</a><a href="#top">↑</a></p><p class="back-menu"><a href="#menu-function-Array.join">←</a><a href="#top">↑</a></p></section><section class="function" id="function-Array.linear"><h1>Array.linear</h1><p class="resume">
				Transforme un tableau imbriquer en un tableau à une dimension.
			</p><p class="back-menu"><a href="#menu-function-Array.linear">←</a><a href="#top">↑</a></p><div role="params"><dl><dt><span class="var-name">array</span>
				: <span class="var-type">Array</span></dt><dt><span class="var-name">accu</span>
				: <span class="var-type">Array|undefined</span></dt></dl></div><div role="return"><p>Array</p></div><p class="back-menu"><a href="#menu-function-Array.linear">←</a><a href="#top">↑</a></p></section><section class="function" id="function-Array.make"><h1>Array.make</h1><p class="resume">
				Construit un tableau.
			</p><p class="back-menu"><a href="#menu-function-Array.make">←</a><a href="#top">↑</a></p><div role="params"><dl><dt><span class="var-name">array</span>
				: <span class="var-type">Array</span></dt><dt><span class="var-name">range</span>
				: <span class="var-type">Array|Number</span></dt><dt><span class="var-name">array</span>
				: <span class="var-type">Array</span></dt><dt><span class="var-name">fn</span>
				: <span class="var-type">Function</span></dt><dt><span class="var-name">thisp</span>
				: <span class="var-type">Object</span></dt></dl></div><div role="return"><p>Array</p></div><p class="back-menu"><a href="#menu-function-Array.make">←</a><a href="#top">↑</a></p></section><section class="function" id="function-Array.map"><h1>Array.map</h1><p class="resume">Array.prototype.map</p><p class="back-menu"><a href="#menu-function-Array.map">←</a><a href="#top">↑</a></p><p class="back-menu"><a href="#menu-function-Array.map">←</a><a href="#top">↑</a></p></section><section class="function" id="function-Array.reduce"><h1>Array.reduce</h1><p class="resume">Array.prototype.reduce</p><p class="back-menu"><a href="#menu-function-Array.reduce">←</a><a href="#top">↑</a></p><p class="back-menu"><a href="#menu-function-Array.reduce">←</a><a href="#top">↑</a></p></section><section class="function" id="function-Array.slice"><h1>Array.slice</h1><p class="resume">Array.prototype.slice</p><p class="back-menu"><a href="#menu-function-Array.slice">←</a><a href="#top">↑</a></p><p class="back-menu"><a href="#menu-function-Array.slice">←</a><a href="#top">↑</a></p></section><section class="function" id="function-Array.uniq"><h1>Array.uniq</h1><p class="resume">
				Supprime les élements identique
			</p><p class="back-menu"><a href="#menu-function-Array.uniq">←</a><a href="#top">↑</a></p><div role="params"><dl><dt><span class="var-name">array</span>
				: <span class="var-type">Array</span></dt></dl></div><div role="return"><p>Array</p></div><p class="back-menu"><a href="#menu-function-Array.uniq">←</a><a href="#top">↑</a></p></section><section class="function" id="function-Boolean.prototype.toBoolean"><h1>Boolean.prototype.toBoolean</h1><p class="resume">
				Retourne lui même.
			</p><p class="back-menu"><a href="#menu-function-Boolean.prototype.toBoolean">←</a><a href="#top">↑</a></p><div role="return"><p>Boolean</p></div><p class="back-menu"><a href="#menu-function-Boolean.prototype.toBoolean">←</a><a href="#top">↑</a></p></section><section class="function" id="function-Boolean.prototype.toBoolean"><h1>Boolean.prototype.toBoolean</h1><p class="resume">
				Retourne lui même.
			</p><p class="back-menu"><a href="#menu-function-Boolean.prototype.toBoolean">←</a><a href="#top">↑</a></p><div role="return"><p>Boolean</p></div><p class="back-menu"><a href="#menu-function-Boolean.prototype.toBoolean">←</a><a href="#top">↑</a></p></section><section class="function" id="function-forEach"><h1>forEach</h1><p class="resume">
				Boucle sur chaque élements.
			</p><p class="back-menu"><a href="#menu-function-forEach">←</a><a href="#top">↑</a></p><div role="params"><dl><dt><span class="var-name">object</span>
				: <span class="var-type">Object</span></dt><dt><span class="var-name">callback</span>
				: <span class="var-type">Function</span></dt><dt><span class="var-name">thisp</span>
				: <span class="var-type">Object</span></dt></dl></div><div role="return"><p>object</p></div><p class="back-menu"><a href="#menu-function-forEach">←</a><a href="#top">↑</a></p></section><section class="function" id="function-Number.prototype.toBoolean"><h1>Number.prototype.toBoolean</h1><p class="resume">
				Retourne vrai si différent de 0.
			</p><p class="back-menu"><a href="#menu-function-Number.prototype.toBoolean">←</a><a href="#top">↑</a></p><div role="return"><p>Boolean</p></div><p class="back-menu"><a href="#menu-function-Number.prototype.toBoolean">←</a><a href="#top">↑</a></p></section><section class="function" id="function-Object.firstValue"><h1>Object.firstValue</h1><p class="resume">
				Retourne la première valeur.
			</p><p class="back-menu"><a href="#menu-function-Object.firstValue">←</a><a href="#top">↑</a></p><div role="params"><dl><dt><span class="var-name">object</span>
				: <span class="var-type">Object</span></dt></dl></div><div role="return"><p>Object</p></div><p class="back-menu"><a href="#menu-function-Object.firstValue">←</a><a href="#top">↑</a></p></section><section class="function" id="function-String.prototype.allIndexOf"><h1>String.prototype.allIndexOf</h1><p class="resume">
				Retourne un tableau de tout les index où trouvé str.
			</p><p class="back-menu"><a href="#menu-function-String.prototype.allIndexOf">←</a><a href="#top">↑</a></p><div role="params"><dl><dt><span class="var-name">str</span>
				: <span class="var-type">String</span></dt></dl></div><div role="return"><p>Array</p></div><p class="back-menu"><a href="#menu-function-String.prototype.allIndexOf">←</a><a href="#top">↑</a></p></section><section class="function" id="function-String.prototype.countLine"><h1>String.prototype.countLine</h1><p class="resume">
				Retourne le nombre de ligne.
			</p><p class="back-menu"><a href="#menu-function-String.prototype.countLine">←</a><a href="#top">↑</a></p><div role="return"><p>Number</p></div><p class="back-menu"><a href="#menu-function-String.prototype.countLine">←</a><a href="#top">↑</a></p></section><section class="function" id="function-String.prototype.firstIndexNonSpace"><h1>String.prototype.firstIndexNonSpace</h1><p class="resume">
				Retourne la position du premier espace ou -1.
			</p><p class="back-menu"><a href="#menu-function-String.prototype.firstIndexNonSpace">←</a><a href="#top">↑</a></p><div role="return"><p>Number</p></div><p class="back-menu"><a href="#menu-function-String.prototype.firstIndexNonSpace">←</a><a href="#top">↑</a></p></section><section class="function" id="function-String.prototype.firstSpace"><h1>String.prototype.firstSpace</h1><p class="resume">
				Retourne une chaîne contenant les espaces de début.
			</p><p class="back-menu"><a href="#menu-function-String.prototype.firstSpace">←</a><a href="#top">↑</a></p><div role="return"><p>String</p></div><p class="back-menu"><a href="#menu-function-String.prototype.firstSpace">←</a><a href="#top">↑</a></p></section><section class="function" id="function-String.prototype.interpret"><h1>String.prototype.interpret</h1><p class="resume">
				Interprete la chaîne comme le ferrait javascript.
			</p><p class="back-menu"><a href="#menu-function-String.prototype.interpret">←</a><a href="#top">↑</a></p><div role="params"><dl/></div><div role="examples"><div class="example"><pre class="resume">plop\\n\th</pre><pre class="command"><code>"plop\\n\\th".interpret()</code></pre><pre class="result">plop
  h</pre></div></div><div role="return"><p>String</p></div><p class="back-menu"><a href="#menu-function-String.prototype.interpret">←</a><a href="#top">↑</a></p></section><section class="function" id="function-String.prototype.lastIndexNonSpace"><h1>String.prototype.lastIndexNonSpace</h1><p class="resume">
				Retourne la position du desnier espace ou -1.
			</p><p class="back-menu"><a href="#menu-function-String.prototype.lastIndexNonSpace">←</a><a href="#top">↑</a></p><div role="return"><p>Number</p></div><p class="back-menu"><a href="#menu-function-String.prototype.lastIndexNonSpace">←</a><a href="#top">↑</a></p></section><section class="function" id="function-String.prototype.lastSpace"><h1>String.prototype.lastSpace</h1><p class="resume">
				Retourne une chaîne contenant les espaces de fin.
			</p><p class="back-menu"><a href="#menu-function-String.prototype.lastSpace">←</a><a href="#top">↑</a></p><div role="return"><p>String</p></div><p class="back-menu"><a href="#menu-function-String.prototype.lastSpace">←</a><a href="#top">↑</a></p></section><section class="function" id="function-String.prototype.ltrim"><h1>String.prototype.ltrim</h1><p class="resume">
				Elimine les espace en début de chaîne.
			</p><p class="back-menu"><a href="#menu-function-String.prototype.ltrim">←</a><a href="#top">↑</a></p><div role="return"><p>String</p></div><p class="back-menu"><a href="#menu-function-String.prototype.ltrim">←</a><a href="#top">↑</a></p></section><section class="function" id="function-String.prototype.repeat"><h1>String.prototype.repeat</h1><p class="resume">
				Retourne la chaîne multiplier n fois.
			</p><p class="back-menu"><a href="#menu-function-String.prototype.repeat">←</a><a href="#top">↑</a></p><div role="params"><dl><dt><span class="var-name">n</span>
				: <span class="var-type">Number</span></dt></dl></div><div role="return"><p>String</p></div><p class="back-menu"><a href="#menu-function-String.prototype.repeat">←</a><a href="#top">↑</a></p></section><section class="function" id="function-String.prototype.reverse"><h1>String.prototype.reverse</h1><p class="resume">
				Retourne la chaîne avec ces caractères inversés.
			</p><p class="back-menu"><a href="#menu-function-String.prototype.reverse">←</a><a href="#top">↑</a></p><div role="return"><p>String</p></div><p class="back-menu"><a href="#menu-function-String.prototype.reverse">←</a><a href="#top">↑</a></p></section><section class="function" id="function-String.prototype.rtrim"><h1>String.prototype.rtrim</h1><p class="resume">
				Elimine les espace en fin de chaîne.
			</p><p class="back-menu"><a href="#menu-function-String.prototype.rtrim">←</a><a href="#top">↑</a></p><div role="return"><p>String</p></div><p class="back-menu"><a href="#menu-function-String.prototype.rtrim">←</a><a href="#top">↑</a></p></section><section class="function" id="function-String.prototype.toBoolean"><h1>String.prototype.toBoolean</h1><p class="resume">
				Retourne Boolean(+this) || isYes()
			</p><p class="back-menu"><a href="#menu-function-String.prototype.toBoolean">←</a><a href="#top">↑</a></p><div role="return"><p>Boolean</p></div><p class="back-menu"><a href="#menu-function-String.prototype.toBoolean">←</a><a href="#top">↑</a></p></section><section class="function" id="function-String.prototype.trim"><h1>String.prototype.trim</h1><p class="resume">
				Elimine les espace en début et fin de chaîne.
			</p><p class="back-menu"><a href="#menu-function-String.prototype.trim">←</a><a href="#top">↑</a></p><div role="return"><p>String</p></div><p class="back-menu"><a href="#menu-function-String.prototype.trim">←</a><a href="#top">↑</a></p></section><section class="function" id="function-String.yesWords"><h1>String.yesWords</h1><p class="resume">
				["true", "yes", "y", "on", "oui", "o"]
			</p><p class="back-menu"><a href="#menu-function-String.yesWords">←</a><a href="#top">↑</a></p><p class="back-menu"><a href="#menu-function-String.yesWords">←</a><a href="#top">↑</a></p></section></div></article><footer><div class="inside"/></footer></body>​​​​​</html>